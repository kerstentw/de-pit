{
  "contractName": "NFTokenEnumerableMock",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "CANNOT_TRANSFER_TO_ZERO_ADDRESS",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "NOT_CURRENT_OWNER",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_approved",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.2+commit.bacdbe57\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CANNOT_TRANSFER_TO_ZERO_ADDRESS\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NOT_CURRENT_OWNER\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is an example contract implementation of NFToken with enumerable extension.\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Set or reaffirm the approved address for an NFT. This function can be changed to payable.\",\"params\":{\"_approved\":\"Address to be approved for the given NFT ID.\",\"_tokenId\":\"ID of the token to be approved.\"}},\"balanceOf(address)\":{\"details\":\"Returns the number of NFTs owned by `_owner`. NFTs assigned to the zero address are considered invalid, and this function throws for queries about the zero address.\",\"params\":{\"_owner\":\"Address for whom to query the balance.\"},\"returns\":{\"_0\":\"Balance of _owner.\"}},\"burn(uint256)\":{\"details\":\"Removes a NFT from owner.\",\"params\":{\"_tokenId\":\"Which NFT we want to remove.\"}},\"getApproved(uint256)\":{\"details\":\"Get the approved address for a single NFT.\",\"params\":{\"_tokenId\":\"ID of the NFT to query the approval of.\"},\"returns\":{\"_0\":\"Address that _tokenId is approved for.\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Checks if `_operator` is an approved operator for `_owner`.\",\"params\":{\"_operator\":\"The address that acts on behalf of the owner.\",\"_owner\":\"The address that owns the NFTs.\"},\"returns\":{\"_0\":\"True if approved for all, false otherwise.\"}},\"mint(address,uint256)\":{\"details\":\"Mints a new NFT.\",\"params\":{\"_to\":\"The address that will own the minted NFT.\",\"_tokenId\":\"of the NFT to be minted by the msg.sender.\"}},\"ownerOf(uint256)\":{\"details\":\"Returns the address of the owner of the NFT. NFTs assigned to zero address are considered invalid, and queries about them do throw.\",\"params\":{\"_tokenId\":\"The identifier for an NFT.\"},\"returns\":{\"_owner\":\"Address of _tokenId owner.\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of an NFT from one address to another address. This function can be changed to payable.\",\"params\":{\"_from\":\"The current owner of the NFT.\",\"_to\":\"The new owner.\",\"_tokenId\":\"The NFT to transfer.\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Transfers the ownership of an NFT from one address to another address. This function can be changed to payable.\",\"params\":{\"_data\":\"Additional data with no specified format, sent in call to `_to`.\",\"_from\":\"The current owner of the NFT.\",\"_to\":\"The new owner.\",\"_tokenId\":\"The NFT to transfer.\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Enables or disables approval for a third party (\\\"operator\\\") to manage all of `msg.sender`'s assets. It also emits the ApprovalForAll event.\",\"params\":{\"_approved\":\"True if the operators is approved, false to revoke approval.\",\"_operator\":\"Address to add to the set of authorized operators.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Function to check which interfaces are suported by this contract.\",\"params\":{\"_interfaceID\":\"Id of the interface.\"},\"returns\":{\"_0\":\"True if _interfaceID is supported, false otherwise.\"}},\"tokenByIndex(uint256)\":{\"details\":\"Returns NFT ID by its index.\",\"params\":{\"_index\":\"A counter less than `totalSupply()`.\"},\"returns\":{\"_0\":\"Token id.\"}},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"returns the n-th NFT ID from a list of owner's tokens.\",\"params\":{\"_index\":\"Index number representing n-th token in owner's list of tokens.\",\"_owner\":\"Token owner's address.\"},\"returns\":{\"_0\":\"Token id.\"}},\"totalSupply()\":{\"details\":\"Returns the count of all existing NFTokens.\",\"returns\":{\"_0\":\"Total supply of NFTs.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. This function can be changed to payable.\",\"params\":{\"_from\":\"The current owner of the NFT.\",\"_to\":\"The new owner.\",\"_tokenId\":\"The NFT to transfer.\"}},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"_newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{\"approve(address,uint256)\":{\"notice\":\"The zero address indicates there is no approved address. Throws unless `msg.sender` is the current NFT owner, or an authorized operator of the current owner.\"},\"getApproved(uint256)\":{\"notice\":\"Throws if `_tokenId` is not a valid NFT.\"},\"safeTransferFrom(address,address,uint256)\":{\"notice\":\"This works identically to the other function with an extra data parameter, except this function just sets data to \\\"\\\"\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"notice\":\"Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. When transfer is complete, this function checks if `_to` is a smart contract (code size > 0). If so, it calls `onERC721Received` on `_to` and throws if the return value is not `bytes4(keccak256(\\\"onERC721Received(address,uint256,bytes)\\\"))`.\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"This works even if sender doesn't own any tokens at the time.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"The caller is responsible to confirm that `_to` is capable of receiving NFTs or else they maybe be permanently lost.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/tk/Programming/education/prototypes/DePit/contracts_env/contracts/mocks/nf-token-enumerable-mock.sol\":\"NFTokenEnumerableMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/tk/Programming/education/prototypes/DePit/contracts_env/contracts/math/safe-math.sol\":{\"keccak256\":\"0x03a68b8260abfe702a42167b05ac26217c93c887e2a92ab06a149893d01302df\",\"urls\":[\"bzz-raw://1c635c7457129309d36c9a4a060a114cf8babe013e56aee593f4cdafce463890\",\"dweb:/ipfs/QmaUZFqx6K8bybjdtSrkUJFQkzAaf9AzZYizn6ZyjC4jNb\"]},\"/Users/tk/Programming/education/prototypes/DePit/contracts_env/contracts/mocks/nf-token-enumerable-mock.sol\":{\"keccak256\":\"0x82dfd84e96b9a01bc15175bcb367491ea1f9972ed8a1e7dda2d1a6ed20a492f2\",\"urls\":[\"bzz-raw://5328076496cc5e11cb5da89264d816c63886239a400f8d0800580495cc885d00\",\"dweb:/ipfs/Qmaof2CCm5LEN2tVaWsnmqzXwUKMy7aPW6Rgn3nj9bqryE\"]},\"/Users/tk/Programming/education/prototypes/DePit/contracts_env/contracts/ownership/ownable.sol\":{\"keccak256\":\"0x07b991e988fe5c48e094cdc862b0e979e2d97ca5dbe06f78953dd2a2c47cc9ba\",\"urls\":[\"bzz-raw://d6895f34a7c0a2e593f265fd80409f49a62452ea31b1e90ea5dc49615abd74e8\",\"dweb:/ipfs/QmdGSEzVeDtVYNMsspbVwdeXr3rvywN4Rz7Fpa91b9XBhs\"]},\"/Users/tk/Programming/education/prototypes/DePit/contracts_env/contracts/tokens/erc721-enumerable.sol\":{\"keccak256\":\"0x7c212621651160b487fcbe4a6680a85e64ca6c655764c649c4e923d5010004f6\",\"urls\":[\"bzz-raw://c1fae7df231cb9c7e85c094a412751bc60168f57ad203048ebc504d94b68411c\",\"dweb:/ipfs/QmXjtuyzgr6LB1qMqntSe7RTiXH1guVu9qtAZLWBy1AqMm\"]},\"/Users/tk/Programming/education/prototypes/DePit/contracts_env/contracts/tokens/erc721-token-receiver.sol\":{\"keccak256\":\"0xd7fb67125fb77c8d21f62ff1ee389fd10b1aa8eae68725710d2a377664fd7892\",\"urls\":[\"bzz-raw://c367eecf257999db17e27f0be1623def86a9e50ea9c89ee8a4a69a401692fbdb\",\"dweb:/ipfs/QmY5Jeg16wMsWYrH58uT2xmTNLvJey3668eURPb98x2h3M\"]},\"/Users/tk/Programming/education/prototypes/DePit/contracts_env/contracts/tokens/erc721.sol\":{\"keccak256\":\"0x2aa58ee300b4509d2fcb5de8f1582f589540c8ebdb069e14102063e76a71bc12\",\"urls\":[\"bzz-raw://161d80d2d97280e751dab30e598ebbfe935865280c583d5ac18a2ff5ab9938ca\",\"dweb:/ipfs/QmUpSFNN6qSuaJyTboqYbkrQphQbThqXm5Ud4inS3mdiHQ\"]},\"/Users/tk/Programming/education/prototypes/DePit/contracts_env/contracts/tokens/nf-token-enumerable.sol\":{\"keccak256\":\"0x6ba2561fc1dba948ae24dadb57ac2dfd06e32555d0a40a6564a6ac714a589aa7\",\"urls\":[\"bzz-raw://e54f041ed2fb030d8e08624fc77713b976c506853a3e91e20ff9d3afcf09d89c\",\"dweb:/ipfs/Qme1KEj1ELZBEFMPbMnjbTAukLh37F23tvjAPWL6ViMJrb\"]},\"/Users/tk/Programming/education/prototypes/DePit/contracts_env/contracts/tokens/nf-token.sol\":{\"keccak256\":\"0x50e808a0d325cf2ded1b365f439a7f91d076927d89184e4b6e9df00dd741e485\",\"urls\":[\"bzz-raw://9d8abba0979c874b681c35699c51122b9f6daaaf2ee3826c226f9d00f812fa1e\",\"dweb:/ipfs/QmQt15pqtiTDkf9Xx8Y411GmqvADohjzW4BTTP9kWrUqtx\"]},\"/Users/tk/Programming/education/prototypes/DePit/contracts_env/contracts/utils/address-utils.sol\":{\"keccak256\":\"0xc76454795b89bb3d8d52ea9b71b3b442f8d9b8935a1e8df1d07b1aebd5e7c4f2\",\"urls\":[\"bzz-raw://c7edb820a8cfc0969bd4ca63659942617f3af3b99e623d68c6712e10ecb9d2d2\",\"dweb:/ipfs/QmUpLDxRHFKRS4oAW2dXYt5n2F4JYC1P9xbeXu4n6kTq9X\"]},\"/Users/tk/Programming/education/prototypes/DePit/contracts_env/contracts/utils/erc165.sol\":{\"keccak256\":\"0x27b1eeda591f5533c25857fb9f6a8cb21ace7358a151ffdf0b52011a4fafb761\",\"urls\":[\"bzz-raw://e711c3df544325c72fbbab7b5506668799360ef6a1c89312db1adcb28064acea\",\"dweb:/ipfs/QmcSWFEb239xsVyuSEPAqRVqAcQQPHfGDr1nhG76aLGq3f\"]},\"/Users/tk/Programming/education/prototypes/DePit/contracts_env/contracts/utils/supports-interface.sol\":{\"keccak256\":\"0x3102bdb456290485edc37c0d31457252cbd2e777f07817c52243bae69b87014f\",\"urls\":[\"bzz-raw://1dfb9d135307ef8d49225aba19bcb40577f794a49cc54e2606f256bb5d54883f\",\"dweb:/ipfs/QmbhJiZRktUe1wFQRBgx5RiR1TrRhCZS8tAQRMFLxRKhuz\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "sourceMap": "214:560:3:-:0;;;454:4:17;420:19;:31;440:10;420:31;;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;4525:4:14;4491:19;:31;4511:10;4491:31;;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;1014:4:12;980:19;:31;1000:10;980:31;;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;1013:10:7;1005:5;;:18;;;;;;;;;;;;;;;;;;214:560:3;;;;;;",
  "deployedSourceMap": "214:560:3:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;214:560:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;676:163:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;676:163:17;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;9621:173:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9621:173:14;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;7486:338;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7486:338:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1148:113:12;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6736:338:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6736:338:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1813:240:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1813:240:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;445:123:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;445:123:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6000:170:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6000:170:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;670:101:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;670:101:3;;;;;;;;;;;;;;;;;:::i;:::-;;1395:189:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1395:189:12;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9187:198:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9187:198:14;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;8735:194;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8735:194:14;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;440:65:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;440:65:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;555:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;8226:223:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8226:223:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5402:199;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;5402:199:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;5402:199:14;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;5402:199:14;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;5402:199:14;;;;;;;;;;;;:::i;:::-;;10055:182;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10055:182:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1358:229:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1358:229:7;;;;;;;;;;;;;;;;;;;:::i;:::-;;385:51;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;385:51:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;676:163:17;780:4;801:19;:33;821:12;801:33;;;;;;;;;;;;;;;;;;;;;;;;;;;794:40;;676:163;;;:::o;9621:173:14:-;9743:7;9720:8;4380:1;4349:33;;:9;:19;4359:8;4349:19;;;;;;;;;;;;;;;;;;;;;:33;;;;4384:13;;;;;;;;;;;;;;;;;4341:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4341:57:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9767:12:::1;:22;9780:8;9767:22;;;;;;;;;;;;;;;;;;;;;9760:29;;9621:173:::0;;;;:::o;7486:338::-;7593:8;3585:18;3606:9;:19;3616:8;3606:19;;;;;;;;;;;;;;;;;;;;;3585:40;;3653:10;3639:24;;:10;:24;;;:68;;;;3667:16;:28;3684:10;3667:28;;;;;;;;;;;;;;;:40;3696:10;3667:40;;;;;;;;;;;;;;;;;;;;;;;;;3639:68;3709:21;;;;;;;;;;;;;;;;;3631:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3631:100:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7620:8:::1;4380:1;4349:33;;:9;:19;4359:8;4349:19;;;;;;;;;;;;;;;;;;;;;:33;;;;4384:13;;;;;;;;;;;;;;;;::::0;4341:57:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4341:57:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7638:18:::2;7659:9;:19;7669:8;7659:19;;;;;;;;;;;;;;;;;;;;;7638:40;;7705:10;7692:23;;:9;:23;;;;7717:8;;;;;;;;;;;;;;;;::::0;7684:42:::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;7684:42:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7758:9;7733:12;:22;7746:8;7733:22;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;7810:8;7799:9;7778:41;;7787:10;7778:41;;;;;;;;;;;;4404:1;3737::::1;7486:338:::0;;;;:::o;1148:113:12:-;1219:7;1243:6;:13;;;;1236:20;;1148:113;:::o;6736:338:14:-;6862:8;3931:18;3952:9;:19;3962:8;3952:19;;;;;;;;;;;;;;;;;;;;;3931:40;;4006:10;3992:24;;:10;:24;;;:70;;;;4052:10;4026:36;;:12;:22;4039:8;4026:22;;;;;;;;;;;;;;;;;;;;;:36;;;3992:70;:120;;;;4072:16;:28;4089:10;4072:28;;;;;;;;;;;;;;;:40;4101:10;4072:40;;;;;;;;;;;;;;;;;;;;;;;;;3992:120;4120:30;;;;;;;;;;;;;;;;;3977:179;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3977:179:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6889:8:::1;4380:1;4349:33;;:9;:19;4359:8;4349:19;;;;;;;;;;;;;;;;;;;;;:33;;;;4384:13;;;;;;;;;;;;;;;;::::0;4341:57:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4341:57:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6907:18:::2;6928:9;:19;6938:8;6928:19;;;;;;;;;;;;;;;;;;;;;6907:40;;6975:5;6961:19;;:10;:19;;;6982:9;;;;;;;;;;;;;;;;::::0;6953:39:::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6953:39:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7021:1;7006:17;;:3;:17;;;;7025:12;;;;;;;;;;;;;;;;::::0;6998:40:::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6998:40:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7045:24;7055:3;7060:8;7045:9;:24::i;:::-;4404:1;4162::::1;6736:338:::0;;;;;:::o;1813:240:12:-;1934:7;1968:10;:18;1979:6;1968:18;;;;;;;;;;;;;;;:25;;;;1959:6;:34;1995:13;;;;;;;;;;;;;;;;;1951:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1951:58:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2022:10;:18;2033:6;2022:18;;;;;;;;;;;;;;;2041:6;2022:26;;;;;;;;;;;;;;;;2015:33;;1813:240;;;;:::o;445:123:3:-;1159:5:7;;;;;;;;;;;1145:19;;:10;:19;;;1166:17;;;;;;;;;;;;;;;;;1137:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1137:47:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;537:26:3::1;549:3;554:8;537:11;:26::i;:::-;445:123:::0;;:::o;6000:170:14:-;6122:43;6140:5;6147:3;6152:8;6122:43;;;;;;;;;;;;:17;:43::i;:::-;6000:170;;;:::o;670:101:3:-;1159:5:7;;;;;;;;;;;1145:19;;:10;:19;;;1166:17;;;;;;;;;;;;;;;;;1137:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1137:47:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;745:21:3::1;757:8;745:11;:21::i;:::-;670:101:::0;:::o;1395:189:12:-;1489:7;1523:6;:13;;;;1514:6;:22;1538:13;;;;;;;;;;;;;;;;;1506:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1506:46:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1565:6;1572;1565:14;;;;;;;;;;;;;;;;1558:21;;1395:189;;;:::o;9187:198:14:-;9278:14;9311:9;:19;9321:8;9311:19;;;;;;;;;;;;;;;;;;;;;9302:28;;9362:1;9344:20;;:6;:20;;;;9366:13;;;;;;;;;;;;;;;;;9336:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;9336:44:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9187:198;;;:::o;8735:194::-;8826:7;8869:1;8851:20;;:6;:20;;;;8873:12;;;;;;;;;;;;;;;;;8843:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;8843:43:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8899:25;8917:6;8899:17;:25::i;:::-;8892:32;;8735:194;;;:::o;440:65:7:-;;;;;;;;;;;;;;;;;;;:::o;555:20::-;;;;;;;;;;;;;:::o;8226:223:14:-;8376:9;8334:16;:28;8351:10;8334:28;;;;;;;;;;;;;;;:39;8363:9;8334:39;;;;;;;;;;;;;;;;:51;;;;;;;;;;;;;;;;;;8423:9;8396:48;;8411:10;8396:48;;;8434:9;8396:48;;;;;;;;;;;;;;;;;;;;;;8226:223;;:::o;5402:199::-;5550:46;5568:5;5575:3;5580:8;5590:5;;5550:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;5550:46:14;;;;;;:17;:46::i;:::-;5402:199;;;;;:::o;10055:182::-;10176:4;10197:16;:24;10214:6;10197:24;;;;;;;;;;;;;;;:35;10222:9;10197:35;;;;;;;;;;;;;;;;;;;;;;;;;10190:42;;10055:182;;;;:::o;1358:229:7:-;1159:5;;;;;;;;;;;1145:19;;:10;:19;;;1166:17;;;;;;;;;;;;;;;;;1137:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1137:47:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1474:1:::1;1453:23;;:9;:23;;;;1478:31;;;;;;;;;;;;;;;;::::0;1445:65:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1445:65:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1549:9;1521:38;;1542:5;;;;;;;;;;;1521:38;;;;;;;;;;;;1573:9;1565:5;;:17;;;;;;;;;;;;;;;;;;1358:229:::0;:::o;385:51::-;;;;;;;;;;;;;;;;;;;:::o;10420:262:14:-;10503:12;10518:9;:19;10528:8;10518:19;;;;;;;;;;;;;;;;;;;;;10503:34;;10543:24;10558:8;10543:14;:24::i;:::-;10574:30;10589:4;10595:8;10574:14;:30::i;:::-;10610:26;10622:3;10627:8;10610:11;:26::i;:::-;10668:8;10663:3;10648:29;;10657:4;10648:29;;;;;;;;;;;;10420:262;;;:::o;2434:207:12:-;2538:26;2550:3;2555:8;2538:11;:26::i;:::-;2570:6;2582:8;2570:21;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2570:21:12;;;;;;;;;;;;;;;;;;;2635:1;2619:6;:13;;;;:17;2597:9;:19;2607:8;2597:19;;;;;;;;;;;:39;;;;2434:207;;:::o;13759:569:14:-;13900:8;3931:18;3952:9;:19;3962:8;3952:19;;;;;;;;;;;;;;;;;;;;;3931:40;;4006:10;3992:24;;:10;:24;;;:70;;;;4052:10;4026:36;;:12;:22;4039:8;4026:22;;;;;;;;;;;;;;;;;;;;;:36;;;3992:70;:120;;;;4072:16;:28;4089:10;4072:28;;;;;;;;;;;;;;;:40;4101:10;4072:40;;;;;;;;;;;;;;;;;;;;;;;;;3992:120;4120:30;;;;;;;;;;;;;;;;;3977:179;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3977:179:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13927:8:::1;4380:1;4349:33;;:9;:19;4359:8;4349:19;;;;;;;;;;;;;;;;;;;;;:33;;;;4384:13;;;;;;;;;;;;;;;;::::0;4341:57:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4341:57:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13945:18:::2;13966:9;:19;13976:8;13966:19;;;;;;;;;;;;;;;;;;;;;13945:40;;14013:5;13999:19;;:10;:19;;;14020:9;;;;;;;;;;;;;;;;::::0;13991:39:::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;13991:39:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14059:1;14044:17;;:3;:17;;;;14063:12;;;;;;;;;;;;;;;;::::0;14036:40:::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;14036:40:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14083:24;14093:3;14098:8;14083:9;:24::i;:::-;14118:16;:3;:14;;;:16::i;:::-;14114:210;;;14148:13;14184:3;14164:41;;;14206:10;14218:5;14225:8;14235:5;14164:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;14164:77:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27::::0;20:12:::2;5:2;14164:77:14;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::2;77:16;74:1;67:27;5:2;14164:77:14;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26::::0;19:12:::2;2:2;14164:77:14;;;;;;;;;;;;;;;;14148:93;;1135:10;14267:24;;14257:34;;;:6;:34;;;;14293:23;;;;;;;;;;;;;;;;::::0;14249:68:::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;14249:68:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14114:210;;4404:1;4162::::1;13759:569:::0;;;;;;:::o;3034:476:12:-;3121:21;3133:8;3121:11;:21::i;:::-;3149:18;3170:9;:19;3180:8;3170:19;;;;;;;;;;;;3149:40;;3195:22;3236:1;3220:6;:13;;;;:17;3195:42;;3243:17;3263:6;3270:14;3263:22;;;;;;;;;;;;;;;;3243:42;;3313:9;3292:6;3299:10;3292:18;;;;;;;;;;;;;;;:30;;;;3329:6;:12;;;;;;;;;;;;;;;;;;;;;;;;3466:10;3443:9;:20;3453:9;3443:20;;;;;;;;;;;:33;;;;3504:1;3482:9;:19;3492:8;3482:19;;;;;;;;;;;:23;;;;3034:476;;;;:::o;5216:165::-;5327:7;5351:10;:18;5362:6;5351:18;;;;;;;;;;;;;;;:25;;;;5344:32;;5216:165;;;:::o;14455:164:14:-;14563:1;14529:36;;:12;:22;14542:8;14529:22;;;;;;;;;;;;;;;;;;;;;:36;;;14525:90;;14586:12;:22;14599:8;14586:22;;;;;;;;;;;;14579:29;;;;;;;;;;;14525:90;14455:164;:::o;3781:580:12:-;3927:5;3904:28;;:9;:19;3914:8;3904:19;;;;;;;;;;;;;;;;;;;;;:28;;;3934:9;;;;;;;;;;;;;;;;;3896:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3896:48:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3957:9;:19;3967:8;3957:19;;;;;;;;;;;;3950:26;;;;;;;;;;;3983;4012:14;:24;4027:8;4012:24;;;;;;;;;;;;3983:53;;4042:22;4094:1;4067:10;:17;4078:5;4067:17;;;;;;;;;;;;;;;:24;;;;:28;4042:53;;4124:18;4106:14;:36;4102:225;;4156:17;4176:10;:17;4187:5;4176:17;;;;;;;;;;;;;;;4194:14;4176:33;;;;;;;;;;;;;;;;4156:53;;4257:9;4217:10;:17;4228:5;4217:17;;;;;;;;;;;;;;;4235:18;4217:37;;;;;;;;;;;;;;;:49;;;;4302:18;4274:14;:25;4289:9;4274:25;;;;;;;;;;;:46;;;;4102:225;;4333:10;:17;4344:5;4333:17;;;;;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;;;;;;;3781:580;;;;:::o;4625:304::-;4774:1;4743:33;;:9;:19;4753:8;4743:19;;;;;;;;;;;;;;;;;;;;;:33;;;4778:18;;;;;;;;;;;;;;;;;4735:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4735:62:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4825:3;4803:9;:19;4813:8;4803:19;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;4835:10;:15;4846:3;4835:15;;;;;;;;;;;;;;;4856:8;4835:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;4835:30:12;;;;;;;;;;;;;;;;;;;4923:1;4898:10;:15;4909:3;4898:15;;;;;;;;;;;;;;;:22;;;;:26;4871:14;:24;4886:8;4871:24;;;;;;;;;;;:53;;;;4625:304;;:::o;11063:284:14:-;11177:1;11162:17;;:3;:17;;;;11181:12;;;;;;;;;;;;;;;;;11154:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11154:40:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11239:1;11208:33;;:9;:19;11218:8;11208:19;;;;;;;;;;;;;;;;;;;;;:33;;;11243:18;;;;;;;;;;;;;;;;;11200:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11200:62:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11269:26;11281:3;11286:8;11269:11;:26::i;:::-;11333:8;11328:3;11307:35;;11324:1;11307:35;;;;;;;;;;;;11063:284;;:::o;434:762:15:-;512:17;944:16;966:19;988:66;966:88;;;;1095:5;1083:18;1071:30;;1160:3;1148:15;;:8;:15;;:42;;;;;1179:11;1167:8;:23;;1148:42;1132:59;;434:762;;;;;:::o;11740:271:14:-;11823:8;4380:1;4349:33;;:9;:19;4359:8;4349:19;;;;;;;;;;;;;;;;;;;;;:33;;;;4384:13;;;;;;;;;;;;;;;;;4341:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4341:57:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11841:18:::1;11862:9;:19;11872:8;11862:19;;;;;;;;;;;;;;;;;;;;;11841:40;;11887:24;11902:8;11887:14;:24::i;:::-;11917:36;11932:10;11944:8;11917:14;:36::i;:::-;11997:8;11993:1;11964:42;;11973:10;11964:42;;;;;;;;;;;;4404:1;11740:271:::0;;:::o",
  "source": "pragma solidity 0.6.2;\n\nimport \"../../contracts/tokens/nf-token-enumerable.sol\";\nimport \"../ownership/ownable.sol\";\n\n/**\n * @dev This is an example contract implementation of NFToken with enumerable extension.\n */\ncontract NFTokenEnumerableMock is\n  NFTokenEnumerable,\n  Ownable\n{\n\n  /**\n   * @dev Mints a new NFT.\n   * @param _to The address that will own the minted NFT.\n   * @param _tokenId of the NFT to be minted by the msg.sender.\n   */\n  function mint(\n    address _to,\n    uint256 _tokenId\n  )\n    external\n    onlyOwner\n  {\n    super._mint(_to, _tokenId);\n  }\n\n  /**\n   * @dev Removes a NFT from owner.\n   * @param _tokenId Which NFT we want to remove.\n   */\n  function burn(\n    uint256 _tokenId\n  )\n    external\n    onlyOwner\n  {\n    super._burn(_tokenId);\n  }\n\n}\n",
  "sourcePath": "/Users/tk/Programming/education/prototypes/DePit/contracts_env/contracts/mocks/nf-token-enumerable-mock.sol",
  "ast": {
    "absolutePath": "/Users/tk/Programming/education/prototypes/DePit/contracts_env/contracts/mocks/nf-token-enumerable-mock.sol",
    "exportedSymbols": {
      "NFTokenEnumerableMock": [
        215
      ]
    },
    "id": 216,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 177,
        "literals": [
          "solidity",
          "0.6",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:3"
      },
      {
        "absolutePath": "/Users/tk/Programming/education/prototypes/DePit/contracts_env/contracts/tokens/nf-token-enumerable.sol",
        "file": "../../contracts/tokens/nf-token-enumerable.sol",
        "id": 178,
        "nodeType": "ImportDirective",
        "scope": 216,
        "sourceUnit": 1013,
        "src": "24:56:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/tk/Programming/education/prototypes/DePit/contracts_env/contracts/ownership/ownable.sol",
        "file": "../ownership/ownable.sol",
        "id": 179,
        "nodeType": "ImportDirective",
        "scope": 216,
        "sourceUnit": 541,
        "src": "81:34:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 180,
              "name": "NFTokenEnumerable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1012,
              "src": "250:17:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NFTokenEnumerable_$1012",
                "typeString": "contract NFTokenEnumerable"
              }
            },
            "id": 181,
            "nodeType": "InheritanceSpecifier",
            "src": "250:17:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 182,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 540,
              "src": "271:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$540",
                "typeString": "contract Ownable"
              }
            },
            "id": 183,
            "nodeType": "InheritanceSpecifier",
            "src": "271:7:3"
          }
        ],
        "contractDependencies": [
          540,
          564,
          700,
          1012,
          1812,
          1852,
          1885
        ],
        "contractKind": "contract",
        "documentation": "@dev This is an example contract implementation of NFToken with enumerable extension.",
        "fullyImplemented": true,
        "id": 215,
        "linearizedBaseContracts": [
          215,
          540,
          1012,
          564,
          1812,
          1885,
          1852,
          700
        ],
        "name": "NFTokenEnumerableMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 199,
              "nodeType": "Block",
              "src": "531:37:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 195,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 185,
                        "src": "549:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 196,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 187,
                        "src": "554:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 192,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "537:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_NFTokenEnumerableMock_$215",
                          "typeString": "contract super NFTokenEnumerableMock"
                        }
                      },
                      "id": 194,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 826,
                      "src": "537:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "537:26:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 198,
                  "nodeType": "ExpressionStatement",
                  "src": "537:26:3"
                }
              ]
            },
            "documentation": "@dev Mints a new NFT.\n@param _to The address that will own the minted NFT.\n@param _tokenId of the NFT to be minted by the msg.sender.",
            "functionSelector": "40c10f19",
            "id": 200,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 190,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 189,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 512,
                  "src": "519:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "519:9:3"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 188,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 185,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 200,
                  "src": "464:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 184,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "464:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 187,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 200,
                  "src": "481:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 186,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "481:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "458:43:3"
            },
            "returnParameters": {
              "id": 191,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "531:0:3"
            },
            "scope": 215,
            "src": "445:123:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 213,
              "nodeType": "Block",
              "src": "739:32:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 210,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 202,
                        "src": "757:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 207,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "745:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_NFTokenEnumerableMock_$215",
                          "typeString": "contract super NFTokenEnumerableMock"
                        }
                      },
                      "id": 209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 881,
                      "src": "745:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "745:21:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 212,
                  "nodeType": "ExpressionStatement",
                  "src": "745:21:3"
                }
              ]
            },
            "documentation": "@dev Removes a NFT from owner.\n@param _tokenId Which NFT we want to remove.",
            "functionSelector": "42966c68",
            "id": 214,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 205,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 204,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 512,
                  "src": "727:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "727:9:3"
              }
            ],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 203,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 202,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 214,
                  "src": "689:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 201,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "689:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "683:26:3"
            },
            "returnParameters": {
              "id": 206,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "739:0:3"
            },
            "scope": 215,
            "src": "670:101:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 216,
        "src": "214:560:3"
      }
    ],
    "src": "0:775:3"
  },
  "legacyAST": {
    "absolutePath": "/Users/tk/Programming/education/prototypes/DePit/contracts_env/contracts/mocks/nf-token-enumerable-mock.sol",
    "exportedSymbols": {
      "NFTokenEnumerableMock": [
        215
      ]
    },
    "id": 216,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 177,
        "literals": [
          "solidity",
          "0.6",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:3"
      },
      {
        "absolutePath": "/Users/tk/Programming/education/prototypes/DePit/contracts_env/contracts/tokens/nf-token-enumerable.sol",
        "file": "../../contracts/tokens/nf-token-enumerable.sol",
        "id": 178,
        "nodeType": "ImportDirective",
        "scope": 216,
        "sourceUnit": 1013,
        "src": "24:56:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/tk/Programming/education/prototypes/DePit/contracts_env/contracts/ownership/ownable.sol",
        "file": "../ownership/ownable.sol",
        "id": 179,
        "nodeType": "ImportDirective",
        "scope": 216,
        "sourceUnit": 541,
        "src": "81:34:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 180,
              "name": "NFTokenEnumerable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1012,
              "src": "250:17:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NFTokenEnumerable_$1012",
                "typeString": "contract NFTokenEnumerable"
              }
            },
            "id": 181,
            "nodeType": "InheritanceSpecifier",
            "src": "250:17:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 182,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 540,
              "src": "271:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$540",
                "typeString": "contract Ownable"
              }
            },
            "id": 183,
            "nodeType": "InheritanceSpecifier",
            "src": "271:7:3"
          }
        ],
        "contractDependencies": [
          540,
          564,
          700,
          1012,
          1812,
          1852,
          1885
        ],
        "contractKind": "contract",
        "documentation": "@dev This is an example contract implementation of NFToken with enumerable extension.",
        "fullyImplemented": true,
        "id": 215,
        "linearizedBaseContracts": [
          215,
          540,
          1012,
          564,
          1812,
          1885,
          1852,
          700
        ],
        "name": "NFTokenEnumerableMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 199,
              "nodeType": "Block",
              "src": "531:37:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 195,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 185,
                        "src": "549:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 196,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 187,
                        "src": "554:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 192,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "537:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_NFTokenEnumerableMock_$215",
                          "typeString": "contract super NFTokenEnumerableMock"
                        }
                      },
                      "id": 194,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 826,
                      "src": "537:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "537:26:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 198,
                  "nodeType": "ExpressionStatement",
                  "src": "537:26:3"
                }
              ]
            },
            "documentation": "@dev Mints a new NFT.\n@param _to The address that will own the minted NFT.\n@param _tokenId of the NFT to be minted by the msg.sender.",
            "functionSelector": "40c10f19",
            "id": 200,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 190,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 189,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 512,
                  "src": "519:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "519:9:3"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 188,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 185,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 200,
                  "src": "464:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 184,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "464:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 187,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 200,
                  "src": "481:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 186,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "481:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "458:43:3"
            },
            "returnParameters": {
              "id": 191,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "531:0:3"
            },
            "scope": 215,
            "src": "445:123:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 213,
              "nodeType": "Block",
              "src": "739:32:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 210,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 202,
                        "src": "757:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 207,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "745:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_NFTokenEnumerableMock_$215",
                          "typeString": "contract super NFTokenEnumerableMock"
                        }
                      },
                      "id": 209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 881,
                      "src": "745:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "745:21:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 212,
                  "nodeType": "ExpressionStatement",
                  "src": "745:21:3"
                }
              ]
            },
            "documentation": "@dev Removes a NFT from owner.\n@param _tokenId Which NFT we want to remove.",
            "functionSelector": "42966c68",
            "id": 214,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 205,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 204,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 512,
                  "src": "727:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "727:9:3"
              }
            ],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 203,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 202,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 214,
                  "src": "689:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 201,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "689:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "683:26:3"
            },
            "returnParameters": {
              "id": 206,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "739:0:3"
            },
            "scope": 215,
            "src": "670:101:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 216,
        "src": "214:560:3"
      }
    ],
    "src": "0:775:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.2+commit.bacdbe57.Linux.g++"
  },
  "networks": {},
  "schemaVersion": "3.0.20",
  "updatedAt": "2020-02-16T13:12:06.455Z",
  "devdoc": {
    "details": "This is an example contract implementation of NFToken with enumerable extension.",
    "methods": {
      "approve(address,uint256)": {
        "details": "Set or reaffirm the approved address for an NFT. This function can be changed to payable.",
        "params": {
          "_approved": "Address to be approved for the given NFT ID.",
          "_tokenId": "ID of the token to be approved."
        }
      },
      "balanceOf(address)": {
        "details": "Returns the number of NFTs owned by `_owner`. NFTs assigned to the zero address are considered invalid, and this function throws for queries about the zero address.",
        "params": {
          "_owner": "Address for whom to query the balance."
        },
        "returns": {
          "_0": "Balance of _owner."
        }
      },
      "burn(uint256)": {
        "details": "Removes a NFT from owner.",
        "params": {
          "_tokenId": "Which NFT we want to remove."
        }
      },
      "getApproved(uint256)": {
        "details": "Get the approved address for a single NFT.",
        "params": {
          "_tokenId": "ID of the NFT to query the approval of."
        },
        "returns": {
          "_0": "Address that _tokenId is approved for."
        }
      },
      "isApprovedForAll(address,address)": {
        "details": "Checks if `_operator` is an approved operator for `_owner`.",
        "params": {
          "_operator": "The address that acts on behalf of the owner.",
          "_owner": "The address that owns the NFTs."
        },
        "returns": {
          "_0": "True if approved for all, false otherwise."
        }
      },
      "mint(address,uint256)": {
        "details": "Mints a new NFT.",
        "params": {
          "_to": "The address that will own the minted NFT.",
          "_tokenId": "of the NFT to be minted by the msg.sender."
        }
      },
      "ownerOf(uint256)": {
        "details": "Returns the address of the owner of the NFT. NFTs assigned to zero address are considered invalid, and queries about them do throw.",
        "params": {
          "_tokenId": "The identifier for an NFT."
        },
        "returns": {
          "_owner": "Address of _tokenId owner."
        }
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of an NFT from one address to another address. This function can be changed to payable.",
        "params": {
          "_from": "The current owner of the NFT.",
          "_to": "The new owner.",
          "_tokenId": "The NFT to transfer."
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Transfers the ownership of an NFT from one address to another address. This function can be changed to payable.",
        "params": {
          "_data": "Additional data with no specified format, sent in call to `_to`.",
          "_from": "The current owner of the NFT.",
          "_to": "The new owner.",
          "_tokenId": "The NFT to transfer."
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Enables or disables approval for a third party (\"operator\") to manage all of `msg.sender`'s assets. It also emits the ApprovalForAll event.",
        "params": {
          "_approved": "True if the operators is approved, false to revoke approval.",
          "_operator": "Address to add to the set of authorized operators."
        }
      },
      "supportsInterface(bytes4)": {
        "details": "Function to check which interfaces are suported by this contract.",
        "params": {
          "_interfaceID": "Id of the interface."
        },
        "returns": {
          "_0": "True if _interfaceID is supported, false otherwise."
        }
      },
      "tokenByIndex(uint256)": {
        "details": "Returns NFT ID by its index.",
        "params": {
          "_index": "A counter less than `totalSupply()`."
        },
        "returns": {
          "_0": "Token id."
        }
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "returns the n-th NFT ID from a list of owner's tokens.",
        "params": {
          "_index": "Index number representing n-th token in owner's list of tokens.",
          "_owner": "Token owner's address."
        },
        "returns": {
          "_0": "Token id."
        }
      },
      "totalSupply()": {
        "details": "Returns the count of all existing NFTokens.",
        "returns": {
          "_0": "Total supply of NFTs."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. This function can be changed to payable.",
        "params": {
          "_from": "The current owner of the NFT.",
          "_to": "The new owner.",
          "_tokenId": "The NFT to transfer."
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "_newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "approve(address,uint256)": {
        "notice": "The zero address indicates there is no approved address. Throws unless `msg.sender` is the current NFT owner, or an authorized operator of the current owner."
      },
      "getApproved(uint256)": {
        "notice": "Throws if `_tokenId` is not a valid NFT."
      },
      "safeTransferFrom(address,address,uint256)": {
        "notice": "This works identically to the other function with an extra data parameter, except this function just sets data to \"\""
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "notice": "Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. When transfer is complete, this function checks if `_to` is a smart contract (code size > 0). If so, it calls `onERC721Received` on `_to` and throws if the return value is not `bytes4(keccak256(\"onERC721Received(address,uint256,bytes)\"))`."
      },
      "setApprovalForAll(address,bool)": {
        "notice": "This works even if sender doesn't own any tokens at the time."
      },
      "transferFrom(address,address,uint256)": {
        "notice": "The caller is responsible to confirm that `_to` is capable of receiving NFTs or else they maybe be permanently lost."
      }
    }
  }
}