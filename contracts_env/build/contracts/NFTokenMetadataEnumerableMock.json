{
  "contractName": "NFTokenMetadataEnumerableMock",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "CANNOT_TRANSFER_TO_ZERO_ADDRESS",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "NOT_CURRENT_OWNER",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_approved",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.2+commit.bacdbe57\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CANNOT_TRANSFER_TO_ZERO_ADDRESS\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NOT_CURRENT_OWNER\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is an example contract implementation of NFToken with enumerable and metadata extensions.\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Set or reaffirm the approved address for an NFT. This function can be changed to payable.\",\"params\":{\"_approved\":\"Address to be approved for the given NFT ID.\",\"_tokenId\":\"ID of the token to be approved.\"}},\"balanceOf(address)\":{\"details\":\"Returns the number of NFTs owned by `_owner`. NFTs assigned to the zero address are considered invalid, and this function throws for queries about the zero address.\",\"params\":{\"_owner\":\"Address for whom to query the balance.\"},\"returns\":{\"_0\":\"Balance of _owner.\"}},\"burn(uint256)\":{\"details\":\"Removes a NFT from owner.\",\"params\":{\"_tokenId\":\"Which NFT we want to remove.\"}},\"constructor\":{\"details\":\"Contract constructor.\",\"params\":{\"_name\":\"A descriptive name for a collection of NFTs.\",\"_symbol\":\"An abbreviated name for NFTokens.\"}},\"getApproved(uint256)\":{\"details\":\"Get the approved address for a single NFT.\",\"params\":{\"_tokenId\":\"ID of the NFT to query the approval of.\"},\"returns\":{\"_0\":\"Address that _tokenId is approved for.\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Checks if `_operator` is an approved operator for `_owner`.\",\"params\":{\"_operator\":\"The address that acts on behalf of the owner.\",\"_owner\":\"The address that owns the NFTs.\"},\"returns\":{\"_0\":\"True if approved for all, false otherwise.\"}},\"mint(address,uint256,string)\":{\"details\":\"Mints a new NFT.\",\"params\":{\"_to\":\"The address that will own the minted NFT.\",\"_tokenId\":\"of the NFT to be minted by the msg.sender.\",\"_uri\":\"String representing RFC 3986 URI.\"}},\"name()\":{\"details\":\"Returns a descriptive name for a collection of NFTokens.\",\"returns\":{\"_name\":\"Representing name.\"}},\"ownerOf(uint256)\":{\"details\":\"Returns the address of the owner of the NFT. NFTs assigned to zero address are considered invalid, and queries about them do throw.\",\"params\":{\"_tokenId\":\"The identifier for an NFT.\"},\"returns\":{\"_owner\":\"Address of _tokenId owner.\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of an NFT from one address to another address. This function can be changed to payable.\",\"params\":{\"_from\":\"The current owner of the NFT.\",\"_to\":\"The new owner.\",\"_tokenId\":\"The NFT to transfer.\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Transfers the ownership of an NFT from one address to another address. This function can be changed to payable.\",\"params\":{\"_data\":\"Additional data with no specified format, sent in call to `_to`.\",\"_from\":\"The current owner of the NFT.\",\"_to\":\"The new owner.\",\"_tokenId\":\"The NFT to transfer.\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Enables or disables approval for a third party (\\\"operator\\\") to manage all of `msg.sender`'s assets. It also emits the ApprovalForAll event.\",\"params\":{\"_approved\":\"True if the operators is approved, false to revoke approval.\",\"_operator\":\"Address to add to the set of authorized operators.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Function to check which interfaces are suported by this contract.\",\"params\":{\"_interfaceID\":\"Id of the interface.\"},\"returns\":{\"_0\":\"True if _interfaceID is supported, false otherwise.\"}},\"symbol()\":{\"details\":\"Returns an abbreviated name for NFTokens.\",\"returns\":{\"_symbol\":\"Representing symbol.\"}},\"tokenByIndex(uint256)\":{\"details\":\"Returns NFT ID by its index.\",\"params\":{\"_index\":\"A counter less than `totalSupply()`.\"},\"returns\":{\"_0\":\"Token id.\"}},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"returns the n-th NFT ID from a list of owner's tokens.\",\"params\":{\"_index\":\"Index number representing n-th token in owner's list of tokens.\",\"_owner\":\"Token owner's address.\"},\"returns\":{\"_0\":\"Token id.\"}},\"tokenURI(uint256)\":{\"details\":\"A distinct URI (RFC 3986) for a given NFT.\",\"params\":{\"_tokenId\":\"Id for which we want uri.\"},\"returns\":{\"_0\":\"URI of _tokenId.\"}},\"totalSupply()\":{\"details\":\"Returns the count of all existing NFTokens.\",\"returns\":{\"_0\":\"Total supply of NFTs.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. This function can be changed to payable.\",\"params\":{\"_from\":\"The current owner of the NFT.\",\"_to\":\"The new owner.\",\"_tokenId\":\"The NFT to transfer.\"}},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"_newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{\"approve(address,uint256)\":{\"notice\":\"The zero address indicates there is no approved address. Throws unless `msg.sender` is the current NFT owner, or an authorized operator of the current owner.\"},\"getApproved(uint256)\":{\"notice\":\"Throws if `_tokenId` is not a valid NFT.\"},\"safeTransferFrom(address,address,uint256)\":{\"notice\":\"This works identically to the other function with an extra data parameter, except this function just sets data to \\\"\\\"\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"notice\":\"Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. When transfer is complete, this function checks if `_to` is a smart contract (code size > 0). If so, it calls `onERC721Received` on `_to` and throws if the return value is not `bytes4(keccak256(\\\"onERC721Received(address,uint256,bytes)\\\"))`.\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"This works even if sender doesn't own any tokens at the time.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"The caller is responsible to confirm that `_to` is capable of receiving NFTs or else they maybe be permanently lost.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/tk/Programming/education/prototypes/DePit/contracts_env/contracts/mocks/nf-token-metadata-enumerable-mock.sol\":\"NFTokenMetadataEnumerableMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/tk/Programming/education/prototypes/DePit/contracts_env/contracts/math/safe-math.sol\":{\"keccak256\":\"0x03a68b8260abfe702a42167b05ac26217c93c887e2a92ab06a149893d01302df\",\"urls\":[\"bzz-raw://1c635c7457129309d36c9a4a060a114cf8babe013e56aee593f4cdafce463890\",\"dweb:/ipfs/QmaUZFqx6K8bybjdtSrkUJFQkzAaf9AzZYizn6ZyjC4jNb\"]},\"/Users/tk/Programming/education/prototypes/DePit/contracts_env/contracts/mocks/nf-token-metadata-enumerable-mock.sol\":{\"keccak256\":\"0x22a80dabd21eb2ab2d22381b2a9f177d7c71e60e0ec7f7facb482ed80923fd15\",\"urls\":[\"bzz-raw://1587ec2889ca3efd517a667516fb5802c277a53b3f6b6a2c28852520796a7d6d\",\"dweb:/ipfs/QmVFwfLU1bc7orkeUZj7bNK1DjEFoA9f1v8aUctZJzQtHP\"]},\"/Users/tk/Programming/education/prototypes/DePit/contracts_env/contracts/ownership/ownable.sol\":{\"keccak256\":\"0x07b991e988fe5c48e094cdc862b0e979e2d97ca5dbe06f78953dd2a2c47cc9ba\",\"urls\":[\"bzz-raw://d6895f34a7c0a2e593f265fd80409f49a62452ea31b1e90ea5dc49615abd74e8\",\"dweb:/ipfs/QmdGSEzVeDtVYNMsspbVwdeXr3rvywN4Rz7Fpa91b9XBhs\"]},\"/Users/tk/Programming/education/prototypes/DePit/contracts_env/contracts/tokens/erc721-enumerable.sol\":{\"keccak256\":\"0x7c212621651160b487fcbe4a6680a85e64ca6c655764c649c4e923d5010004f6\",\"urls\":[\"bzz-raw://c1fae7df231cb9c7e85c094a412751bc60168f57ad203048ebc504d94b68411c\",\"dweb:/ipfs/QmXjtuyzgr6LB1qMqntSe7RTiXH1guVu9qtAZLWBy1AqMm\"]},\"/Users/tk/Programming/education/prototypes/DePit/contracts_env/contracts/tokens/erc721-metadata.sol\":{\"keccak256\":\"0xe9d1a5eb6eb32d7d7a5b7fe4b9445327db82535ec777fbe6c7a1fc852430c29a\",\"urls\":[\"bzz-raw://9cc351650fa9de4576f58ad296a4ba08cd4d7ed9cf7a6bd3f0c471552573153d\",\"dweb:/ipfs/QmVP5H2HLk64row31NNUQbT94SYdjhCAJ2dcd2fvJdKeKY\"]},\"/Users/tk/Programming/education/prototypes/DePit/contracts_env/contracts/tokens/erc721-token-receiver.sol\":{\"keccak256\":\"0xd7fb67125fb77c8d21f62ff1ee389fd10b1aa8eae68725710d2a377664fd7892\",\"urls\":[\"bzz-raw://c367eecf257999db17e27f0be1623def86a9e50ea9c89ee8a4a69a401692fbdb\",\"dweb:/ipfs/QmY5Jeg16wMsWYrH58uT2xmTNLvJey3668eURPb98x2h3M\"]},\"/Users/tk/Programming/education/prototypes/DePit/contracts_env/contracts/tokens/erc721.sol\":{\"keccak256\":\"0x2aa58ee300b4509d2fcb5de8f1582f589540c8ebdb069e14102063e76a71bc12\",\"urls\":[\"bzz-raw://161d80d2d97280e751dab30e598ebbfe935865280c583d5ac18a2ff5ab9938ca\",\"dweb:/ipfs/QmUpSFNN6qSuaJyTboqYbkrQphQbThqXm5Ud4inS3mdiHQ\"]},\"/Users/tk/Programming/education/prototypes/DePit/contracts_env/contracts/tokens/nf-token-enumerable.sol\":{\"keccak256\":\"0x6ba2561fc1dba948ae24dadb57ac2dfd06e32555d0a40a6564a6ac714a589aa7\",\"urls\":[\"bzz-raw://e54f041ed2fb030d8e08624fc77713b976c506853a3e91e20ff9d3afcf09d89c\",\"dweb:/ipfs/Qme1KEj1ELZBEFMPbMnjbTAukLh37F23tvjAPWL6ViMJrb\"]},\"/Users/tk/Programming/education/prototypes/DePit/contracts_env/contracts/tokens/nf-token-metadata.sol\":{\"keccak256\":\"0x5781e18ddc1f61671448a711e78a9f24623d4a3fcbc67a5d50693bab5bf2c3d3\",\"urls\":[\"bzz-raw://9af2e7491b531fdd4023bd7fffd0a9c0caddb38b37d413ea67e7a7e627a0bbd9\",\"dweb:/ipfs/QmQMW4DKVBDGzJ4RngghwsyntKVykJHSReZf6NuaXiwH1r\"]},\"/Users/tk/Programming/education/prototypes/DePit/contracts_env/contracts/tokens/nf-token.sol\":{\"keccak256\":\"0x50e808a0d325cf2ded1b365f439a7f91d076927d89184e4b6e9df00dd741e485\",\"urls\":[\"bzz-raw://9d8abba0979c874b681c35699c51122b9f6daaaf2ee3826c226f9d00f812fa1e\",\"dweb:/ipfs/QmQt15pqtiTDkf9Xx8Y411GmqvADohjzW4BTTP9kWrUqtx\"]},\"/Users/tk/Programming/education/prototypes/DePit/contracts_env/contracts/utils/address-utils.sol\":{\"keccak256\":\"0xc76454795b89bb3d8d52ea9b71b3b442f8d9b8935a1e8df1d07b1aebd5e7c4f2\",\"urls\":[\"bzz-raw://c7edb820a8cfc0969bd4ca63659942617f3af3b99e623d68c6712e10ecb9d2d2\",\"dweb:/ipfs/QmUpLDxRHFKRS4oAW2dXYt5n2F4JYC1P9xbeXu4n6kTq9X\"]},\"/Users/tk/Programming/education/prototypes/DePit/contracts_env/contracts/utils/erc165.sol\":{\"keccak256\":\"0x27b1eeda591f5533c25857fb9f6a8cb21ace7358a151ffdf0b52011a4fafb761\",\"urls\":[\"bzz-raw://e711c3df544325c72fbbab7b5506668799360ef6a1c89312db1adcb28064acea\",\"dweb:/ipfs/QmcSWFEb239xsVyuSEPAqRVqAcQQPHfGDr1nhG76aLGq3f\"]},\"/Users/tk/Programming/education/prototypes/DePit/contracts_env/contracts/utils/supports-interface.sol\":{\"keccak256\":\"0x3102bdb456290485edc37c0d31457252cbd2e777f07817c52243bae69b87014f\",\"urls\":[\"bzz-raw://1dfb9d135307ef8d49225aba19bcb40577f794a49cc54e2606f256bb5d54883f\",\"dweb:/ipfs/QmbhJiZRktUe1wFQRBgx5RiR1TrRhCZS8tAQRMFLxRKhuz\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101425760003560e01c806370a08231116100b8578063b88d4fde1161007c578063b88d4fde1461071d578063c87b56dd146107e0578063d3fc986414610887578063e985e9c51461092a578063f2fde38b146109a6578063f3fe3bc3146109ea57610142565b806370a0823114610525578063860d248a1461057d5780638da5cb5b1461060057806395d89b411461064a578063a22cb465146106cd57610142565b806323b872dd1161010a57806323b872dd146103095780632f745c591461037757806342842e0e146103d957806342966c68146104475780634f6ccce7146104755780636352211e146104b757610142565b806301ffc9a71461014757806306fdde03146101ac578063081812fc1461022f578063095ea7b31461029d57806318160ddd146102eb575b600080fd5b6101926004803603602081101561015d57600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610a6d565b604051808215151515815260200191505060405180910390f35b6101b4610ad4565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101f45780820151818401526020810190506101d9565b50505050905090810190601f1680156102215780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61025b6004803603602081101561024557600080fd5b8101908080359060200190929190505050610b76565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102e9600480360360408110156102b357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610cf6565b005b6102f3611208565b6040518082815260200191505060405180910390f35b6103756004803603606081101561031f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611215565b005b6103c36004803603604081101561038d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506117fb565b6040518082815260200191505060405180910390f35b610445600480360360608110156103ef57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061197c565b005b6104736004803603602081101561045d57600080fd5b810190808035906020019092919050505061199c565b005b6104a16004803603602081101561048b57600080fd5b8101908080359060200190929190505050611ad6565b6040518082815260200191505060405180910390f35b6104e3600480360360208110156104cd57600080fd5b8101908080359060200190929190505050611bdc565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6105676004803603602081101561053b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611d27565b6040518082815260200191505060405180910390f35b610585611e46565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156105c55780820151818401526020810190506105aa565b50505050905090810190601f1680156105f25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610608611e7f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610652611ea5565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610692578082015181840152602081019050610677565b50505050905090810190601f1680156106bf5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61071b600480360360408110156106e357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611f47565b005b6107de6004803603608081101561073357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561079a57600080fd5b8201836020820111156107ac57600080fd5b803590602001918460018302840111640100000000831117156107ce57600080fd5b9091929391929390505050612048565b005b61080c600480360360208110156107f657600080fd5b810190808035906020019092919050505061209f565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561084c578082015181840152602081019050610831565b50505050905090810190601f1680156108795780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6109286004803603606081101561089d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001906401000000008111156108e457600080fd5b8201836020820111156108f657600080fd5b8035906020019184600183028401116401000000008311171561091857600080fd5b9091929391929390505050612297565b005b61098c6004803603604081101561094057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612423565b604051808215151515815260200191505060405180910390f35b6109e8600480360360208110156109bc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506124b7565b005b6109f26127b3565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610a32578082015181840152602081019050610a17565b50505050905090810190601f168015610a5f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060098054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b6c5780601f10610b4157610100808354040283529160200191610b6c565b820191906000526020600020905b815481529060010190602001808311610b4f57829003601f168201915b5050505050905090565b600081600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303032000000000000000000000000000000000000000000000000000081525090610cb9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610c7e578082015181840152602081019050610c63565b50505050905090810190601f168015610cab5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b8060006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161480610def5750600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b6040518060400160405280600681526020017f303033303033000000000000000000000000000000000000000000000000000081525090610ecb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610e90578082015181840152602081019050610e75565b50505050905090810190601f168015610ebd5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5082600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f30303330303200000000000000000000000000000000000000000000000000008152509061100d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610fd2578082015181840152602081019050610fb7565b50505050905090810190601f168015610fff5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060006001600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303038000000000000000000000000000000000000000000000000000081525090611152576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156111175780820151818401526020810190506110fc565b50505050905090810190601f1680156111445780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50856002600087815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050505050565b6000600580549050905090565b8060006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614806112e657503373ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b806113775750600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b6040518060400160405280600681526020017f303033303034000000000000000000000000000000000000000000000000000081525090611453576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156114185780820151818401526020810190506113fd565b50505050905090810190601f1680156114455780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5082600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303032000000000000000000000000000000000000000000000000000081525090611595576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561155a57808201518184015260208101905061153f565b50505050905090810190601f1680156115875780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060006001600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f3030333030370000000000000000000000000000000000000000000000000000815250906116d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561169e578082015181840152602081019050611683565b50505050905090810190601f1680156116cb5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f3030333030310000000000000000000000000000000000000000000000000000815250906117e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156117ac578082015181840152602081019050611791565b50505050905090810190601f1680156117d95780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506117f286866127ec565b50505050505050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905082106040518060400160405280600681526020017f30303530303700000000000000000000000000000000000000000000000000008152509061191e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156118e35780820151818401526020810190506118c8565b50505050905090810190601f1680156119105780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061196957fe5b9060005260206000200154905092915050565b611997838383604051806020016040528060008152506128a1565b505050565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f303138303031000000000000000000000000000000000000000000000000000081525090611ac9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611a8e578082015181840152602081019050611a73565b50505050905090810190601f168015611abb5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50611ad38161313a565b50565b600060058054905082106040518060400160405280600681526020017f303035303037000000000000000000000000000000000000000000000000000081525090611bbc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611b81578082015181840152602081019050611b66565b50505050905090810190601f168015611bae5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060058281548110611bca57fe5b90600052602060002001549050919050565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303032000000000000000000000000000000000000000000000000000081525090611d21576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611ce6578082015181840152602081019050611ccb565b50505050905090810190601f168015611d135780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303031000000000000000000000000000000000000000000000000000081525090611e35576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611dfa578082015181840152602081019050611ddf565b50505050905090810190601f168015611e275780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50611e3f82613195565b9050919050565b6040518060400160405280600681526020017f303138303032000000000000000000000000000000000000000000000000000081525081565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600a8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611f3d5780601f10611f1257610100808354040283529160200191611f3d565b820191906000526020600020905b815481529060010190602001808311611f2057829003601f168201915b5050505050905090565b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b61209885858585858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506128a1565b5050505050565b606081600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f3030333030320000000000000000000000000000000000000000000000000000815250906121e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156121a757808201518184015260208101905061218c565b50505050905090810190601f1680156121d45780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600b60008481526020019081526020016000208054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561228a5780601f1061225f5761010080835404028352916020019161228a565b820191906000526020600020905b81548152906001019060200180831161226d57829003601f168201915b5050505050915050919050565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f3031383030310000000000000000000000000000000000000000000000000000815250906123c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561238957808201518184015260208101905061236e565b50505050905090810190601f1680156123b65780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506123cf84846131a7565b61241d8383838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506131fe565b50505050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f3031383030310000000000000000000000000000000000000000000000000000815250906125e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156125a957808201518184015260208101905061258e565b50505050905090810190601f1680156125d65780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f3031383030320000000000000000000000000000000000000000000000000000815250906126f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156126b757808201518184015260208101905061269c565b50505050905090810190601f1680156126e45780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b508073ffffffffffffffffffffffffffffffffffffffff16600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6040518060400160405280600681526020017f303138303031000000000000000000000000000000000000000000000000000081525081565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905061282d8261336d565b612837818361340e565b612841838361341c565b818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b8160006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16148061297257503373ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b80612a035750600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b6040518060400160405280600681526020017f303033303034000000000000000000000000000000000000000000000000000081525090612adf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612aa4578082015181840152602081019050612a89565b50505050905090810190601f168015612ad15780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5083600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303032000000000000000000000000000000000000000000000000000081525090612c21576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612be6578082015181840152602081019050612bcb565b50505050905090810190601f168015612c135780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060006001600087815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508773ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f303033303037000000000000000000000000000000000000000000000000000081525090612d65576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612d2a578082015181840152602081019050612d0f565b50505050905090810190601f168015612d575780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303031000000000000000000000000000000000000000000000000000081525090612e73576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612e38578082015181840152602081019050612e1d565b50505050905090810190601f168015612e655780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50612e7e87876127ec565b612e9d8773ffffffffffffffffffffffffffffffffffffffff1661342a565b156131305760008773ffffffffffffffffffffffffffffffffffffffff1663150b7a02338b8a8a6040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015612f7d578082015181840152602081019050612f62565b50505050905090810190601f168015612faa5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b158015612fcc57600080fd5b505af1158015612fe0573d6000803e3d6000fd5b505050506040513d6020811015612ff657600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146040518060400160405280600681526020017f30303330303500000000000000000000000000000000000000000000000000008152509061312d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156130f25780820151818401526020810190506130d7565b50505050905090810190601f16801561311f5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50505b5050505050505050565b61314381613475565b6000600b60008381526020019081526020016000208054600181600116156101000203166002900490501461319257600b600082815260200190815260200160002060006131919190613f8c565b5b50565b60006131a082613533565b9050919050565b6131b1828261357f565b600581908060018154018082558091505060019003906000526020600020016000909190919091505560016005805490500360066000838152602001908152602001600020819055505050565b81600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f30303330303200000000000000000000000000000000000000000000000000008152509061333f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156133045780820151818401526020810190506132e9565b50505050905090810190601f1680156133315780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5081600b60008581526020019081526020016000209080519060200190613367929190613fd4565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461340b576002600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555b50565b6134188282613837565b5050565b6134268282613b45565b5050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f91506000801b821415801561346c5750808214155b92505050919050565b61347e81613d9e565b600060066000838152602001908152602001600020549050600060016005805490500390506000600582815481106134b257fe5b9060005260206000200154905080600584815481106134cd57fe5b906000526020600020018190555060058054806134e657fe5b600190038181906000526020600020016000905590558260066000838152602001908152602001600020819055506000600660008681526020019081526020016000208190555050505050565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f30303330303100000000000000000000000000000000000000000000000000008152509061368c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015613651578082015181840152602081019050613636565b50505050905090810190601f16801561367e5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f3030333030360000000000000000000000000000000000000000000000000000815250906137cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015613791578082015181840152602081019050613776565b50505050905090810190601f1680156137be5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506137d7828261341c565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b8173ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f303033303037000000000000000000000000000000000000000000000000000081525090613975576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561393a57808201518184015260208101905061391f565b50505050905090810190601f1680156139675780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506001600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560006008600083815260200190815260200160002054905060006001600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050039050818114613ae1576000600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110613a6157fe5b9060005260206000200154905080600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208481548110613ab957fe5b9060005260206000200181905550826008600083815260200190815260200160002081905550505b600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480613b2957fe5b6001900381819060005260206000200160009055905550505050565b600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f303033303036000000000000000000000000000000000000000000000000000081525090613c84576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015613c49578082015181840152602081019050613c2e565b50505050905090810190601f168015613c765780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002001600090919091909150556001600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490500360086000838152602001908152602001600020819055505050565b80600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303032000000000000000000000000000000000000000000000000000081525090613edf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015613ea4578082015181840152602081019050613e89565b50505050905090810190601f168015613ed15780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060006001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050613f218361336d565b613f2b818461340e565b82600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b50805460018160011615610100020316600290046000825580601f10613fb25750613fd1565b601f016020900490600052602060002090810190613fd09190614054565b5b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061401557805160ff1916838001178555614043565b82800160010185558215614043579182015b82811115614042578251825591602001919060010190614027565b5b5090506140509190614054565b5090565b61407691905b8082111561407257600081600090555060010161405a565b5090565b9056fea2646970667358221220fb649b294a03dd7a1e96badcd630c87285404326d63930047e57dfc45013aaac64736f6c63430006020033",
  "sourceMap": "260:3583:4:-:0;;;518:132;8:9:-1;5:2;;;30:1;27;20:12;5:2;518:132:4;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;518:132:4;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;518:132:4;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;518:132:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;518:132:4;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;518:132:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;454:4:17;420:19;:31;440:10;420:31;;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;4525:4:14;4491:19;:31;4511:10;4491:31;;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;1014:4:12;980:19;:31;1000:10;980:31;;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;721:4:13;687:19;:31;707:10;687:31;;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;1013:10:7;1005:5;;:18;;;;;;;;;;;;;;;;;;615:5:4;605:7;:15;;;;;;;;;;;;:::i;:::-;;638:7;626:9;:19;;;;;;;;;;;;:::i;:::-;;518:132;;260:3583;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "260:3583:4:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;260:3583:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;676:163:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;676:163:17;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;869:113:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;869:113:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9621:173:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9621:173:14;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;7486:338;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7486:338:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1148:113:12;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6736:338:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6736:338:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1813:240:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1813:240:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6000:170:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6000:170:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1157:101:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1157:101:4;;;;;;;;;;;;;;;;;:::i;:::-;;1395:189:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1395:189:12;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9187:198:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9187:198:14;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;8735:194;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8735:194:14;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;440:65:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;440:65:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;555:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1092:121:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1092:121:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8226:223:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8226:223:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5402:199;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;5402:199:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;5402:199:14;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;5402:199:14;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;5402:199:14;;;;;;;;;;;;:::i;:::-;;1359:171:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1359:171:13;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1359:171:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;866:189:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;866:189:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;866:189:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;866:189:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;866:189:4;;;;;;;;;;;;:::i;:::-;;10055:182:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10055:182:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1358:229:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1358:229:7;;;;;;;;;;;;;;;;;;;:::i;:::-;;385:51;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;385:51:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;676:163:17;780:4;801:19;:33;821:12;801:33;;;;;;;;;;;;;;;;;;;;;;;;;;;794:40;;676:163;;;:::o;869:113:13:-;933:19;970:7;962:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;869:113;:::o;9621:173:14:-;9743:7;9720:8;4380:1;4349:33;;:9;:19;4359:8;4349:19;;;;;;;;;;;;;;;;;;;;;:33;;;;4384:13;;;;;;;;;;;;;;;;;4341:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4341:57:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9767:12:::1;:22;9780:8;9767:22;;;;;;;;;;;;;;;;;;;;;9760:29;;9621:173:::0;;;;:::o;7486:338::-;7593:8;3585:18;3606:9;:19;3616:8;3606:19;;;;;;;;;;;;;;;;;;;;;3585:40;;3653:10;3639:24;;:10;:24;;;:68;;;;3667:16;:28;3684:10;3667:28;;;;;;;;;;;;;;;:40;3696:10;3667:40;;;;;;;;;;;;;;;;;;;;;;;;;3639:68;3709:21;;;;;;;;;;;;;;;;;3631:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3631:100:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7620:8:::1;4380:1;4349:33;;:9;:19;4359:8;4349:19;;;;;;;;;;;;;;;;;;;;;:33;;;;4384:13;;;;;;;;;;;;;;;;::::0;4341:57:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4341:57:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7638:18:::2;7659:9;:19;7669:8;7659:19;;;;;;;;;;;;;;;;;;;;;7638:40;;7705:10;7692:23;;:9;:23;;;;7717:8;;;;;;;;;;;;;;;;::::0;7684:42:::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;7684:42:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7758:9;7733:12;:22;7746:8;7733:22;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;7810:8;7799:9;7778:41;;7787:10;7778:41;;;;;;;;;;;;4404:1;3737::::1;7486:338:::0;;;;:::o;1148:113:12:-;1219:7;1243:6;:13;;;;1236:20;;1148:113;:::o;6736:338:14:-;6862:8;3931:18;3952:9;:19;3962:8;3952:19;;;;;;;;;;;;;;;;;;;;;3931:40;;4006:10;3992:24;;:10;:24;;;:70;;;;4052:10;4026:36;;:12;:22;4039:8;4026:22;;;;;;;;;;;;;;;;;;;;;:36;;;3992:70;:120;;;;4072:16;:28;4089:10;4072:28;;;;;;;;;;;;;;;:40;4101:10;4072:40;;;;;;;;;;;;;;;;;;;;;;;;;3992:120;4120:30;;;;;;;;;;;;;;;;;3977:179;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3977:179:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6889:8:::1;4380:1;4349:33;;:9;:19;4359:8;4349:19;;;;;;;;;;;;;;;;;;;;;:33;;;;4384:13;;;;;;;;;;;;;;;;::::0;4341:57:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4341:57:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6907:18:::2;6928:9;:19;6938:8;6928:19;;;;;;;;;;;;;;;;;;;;;6907:40;;6975:5;6961:19;;:10;:19;;;6982:9;;;;;;;;;;;;;;;;::::0;6953:39:::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6953:39:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7021:1;7006:17;;:3;:17;;;;7025:12;;;;;;;;;;;;;;;;::::0;6998:40:::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6998:40:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7045:24;7055:3;7060:8;7045:9;:24::i;:::-;4404:1;4162::::1;6736:338:::0;;;;;:::o;1813:240:12:-;1934:7;1968:10;:18;1979:6;1968:18;;;;;;;;;;;;;;;:25;;;;1959:6;:34;1995:13;;;;;;;;;;;;;;;;;1951:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1951:58:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2022:10;:18;2033:6;2022:18;;;;;;;;;;;;;;;2041:6;2022:26;;;;;;;;;;;;;;;;2015:33;;1813:240;;;;:::o;6000:170:14:-;6122:43;6140:5;6147:3;6152:8;6122:43;;;;;;;;;;;;:17;:43::i;:::-;6000:170;;;:::o;1157:101:4:-;1159:5:7;;;;;;;;;;;1145:19;;:10;:19;;;1166:17;;;;;;;;;;;;;;;;;1137:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1137:47:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1232:21:4::1;1244:8;1232:11;:21::i;:::-;1157:101:::0;:::o;1395:189:12:-;1489:7;1523:6;:13;;;;1514:6;:22;1538:13;;;;;;;;;;;;;;;;;1506:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1506:46:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1565:6;1572;1565:14;;;;;;;;;;;;;;;;1558:21;;1395:189;;;:::o;9187:198:14:-;9278:14;9311:9;:19;9321:8;9311:19;;;;;;;;;;;;;;;;;;;;;9302:28;;9362:1;9344:20;;:6;:20;;;;9366:13;;;;;;;;;;;;;;;;;9336:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;9336:44:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9187:198;;;:::o;8735:194::-;8826:7;8869:1;8851:20;;:6;:20;;;;8873:12;;;;;;;;;;;;;;;;;8843:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;8843:43:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8899:25;8917:6;8899:17;:25::i;:::-;8892:32;;8735:194;;;:::o;440:65:7:-;;;;;;;;;;;;;;;;;;;:::o;555:20::-;;;;;;;;;;;;;:::o;1092:121:13:-;1158:21;1199:9;1189:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1092:121;:::o;8226:223:14:-;8376:9;8334:16;:28;8351:10;8334:28;;;;;;;;;;;;;;;:39;8363:9;8334:39;;;;;;;;;;;;;;;;:51;;;;;;;;;;;;;;;;;;8423:9;8396:48;;8411:10;8396:48;;;8434:9;8396:48;;;;;;;;;;;;;;;;;;;;;;8226:223;;:::o;5402:199::-;5550:46;5568:5;5575:3;5580:8;5590:5;;5550:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;5550:46:14;;;;;;:17;:46::i;:::-;5402:199;;;;;:::o;1359:171:13:-;1478:13;1455:8;4380:1:14;4349:33;;:9;:19;4359:8;4349:19;;;;;;;;;;;;;;;;;;;;;:33;;;;4384:13;;;;;;;;;;;;;;;;;4341:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4341:57:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1508:7:13::1;:17;1516:8;1508:17;;;;;;;;;;;1501:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1359:171:::0;;;;:::o;866:189:4:-;1159:5:7;;;;;;;;;;;1145:19;;:10;:19;;;1166:17;;;;;;;;;;;;;;;;;1137:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1137:47:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;984:26:4::1;996:3;1001:8;984:11;:26::i;:::-;1016:34;1035:8;1045:4;;1016:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1016:34:4;;;;;;:18;:34::i;:::-;866:189:::0;;;;:::o;10055:182:14:-;10176:4;10197:16;:24;10214:6;10197:24;;;;;;;;;;;;;;;:35;10222:9;10197:35;;;;;;;;;;;;;;;;;;;;;;;;;10190:42;;10055:182;;;;:::o;1358:229:7:-;1159:5;;;;;;;;;;;1145:19;;:10;:19;;;1166:17;;;;;;;;;;;;;;;;;1137:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1137:47:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1474:1:::1;1453:23;;:9;:23;;;;1478:31;;;;;;;;;;;;;;;;::::0;1445:65:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1445:65:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1549:9;1521:38;;1542:5;;;;;;;;;;;1521:38;;;;;;;;;;;;1573:9;1565:5;;:17;;;;;;;;;;;;;;;;;;1358:229:::0;:::o;385:51::-;;;;;;;;;;;;;;;;;;;:::o;10420:262:14:-;10503:12;10518:9;:19;10528:8;10518:19;;;;;;;;;;;;;;;;;;;;;10503:34;;10543:24;10558:8;10543:14;:24::i;:::-;10574:30;10589:4;10595:8;10574:14;:30::i;:::-;10610:26;10622:3;10627:8;10610:11;:26::i;:::-;10668:8;10663:3;10648:29;;10657:4;10648:29;;;;;;;;;;;;10420:262;;;:::o;13759:569::-;13900:8;3931:18;3952:9;:19;3962:8;3952:19;;;;;;;;;;;;;;;;;;;;;3931:40;;4006:10;3992:24;;:10;:24;;;:70;;;;4052:10;4026:36;;:12;:22;4039:8;4026:22;;;;;;;;;;;;;;;;;;;;;:36;;;3992:70;:120;;;;4072:16;:28;4089:10;4072:28;;;;;;;;;;;;;;;:40;4101:10;4072:40;;;;;;;;;;;;;;;;;;;;;;;;;3992:120;4120:30;;;;;;;;;;;;;;;;;3977:179;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3977:179:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13927:8:::1;4380:1;4349:33;;:9;:19;4359:8;4349:19;;;;;;;;;;;;;;;;;;;;;:33;;;;4384:13;;;;;;;;;;;;;;;;::::0;4341:57:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4341:57:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13945:18:::2;13966:9;:19;13976:8;13966:19;;;;;;;;;;;;;;;;;;;;;13945:40;;14013:5;13999:19;;:10;:19;;;14020:9;;;;;;;;;;;;;;;;::::0;13991:39:::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;13991:39:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14059:1;14044:17;;:3;:17;;;;14063:12;;;;;;;;;;;;;;;;::::0;14036:40:::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;14036:40:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14083:24;14093:3;14098:8;14083:9;:24::i;:::-;14118:16;:3;:14;;;:16::i;:::-;14114:210;;;14148:13;14184:3;14164:41;;;14206:10;14218:5;14225:8;14235:5;14164:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;14164:77:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27::::0;20:12:::2;5:2;14164:77:14;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::2;77:16;74:1;67:27;5:2;14164:77:14;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26::::0;19:12:::2;2:2;14164:77:14;;;;;;;;;;;;;;;;14148:93;;1135:10;14267:24;;14257:34;;;:6;:34;;;;14293:23;;;;;;;;;;;;;;;;::::0;14249:68:::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;14249:68:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14114:210;;4404:1;4162::::1;13759:569:::0;;;;;;:::o;1923:204:13:-;2010:21;2022:8;2010:11;:21::i;:::-;2077:1;2048:7;:17;2056:8;2048:17;;;;;;;;;;;2042:31;;;;;;;;;;;;;;;;:36;2038:85;;2099:7;:17;2107:8;2099:17;;;;;;;;;;;;2092:24;;;;:::i;:::-;2038:85;1923:204;:::o;3641:199:4:-;3768:7;3792:43;3828:6;3792:35;:43::i;:::-;3785:50;;3641:199;;;:::o;2434:207:12:-;2538:26;2550:3;2555:8;2538:11;:26::i;:::-;2570:6;2582:8;2570:21;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2570:21:12;;;;;;;;;;;;;;;;;;;2635:1;2619:6;:13;;;;:17;2597:9;:19;2607:8;2597:19;;;;;;;;;;;:39;;;;2434:207;;:::o;2512:149:13:-;2614:8;4380:1:14;4349:33;;:9;:19;4359:8;4349:19;;;;;;;;;;;;;;;;;;;;;:33;;;;4384:13;;;;;;;;;;;;;;;;;4341:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4341:57:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2652:4:13::1;2632:7;:17;2640:8;2632:17;;;;;;;;;;;:24;;;;;;;;;;;;:::i;:::-;;2512:149:::0;;;:::o;14455:164:14:-;14563:1;14529:36;;:12;:22;14542:8;14529:22;;;;;;;;;;;;;;;;;;;;;:36;;;14525:90;;14586:12;:22;14599:8;14586:22;;;;;;;;;;;;14579:29;;;;;;;;;;;14525:90;14455:164;:::o;2729:185:4:-;2860:49;2893:5;2900:8;2860:32;:49::i;:::-;2729:185;;:::o;3178:175::-;3304:44;3334:3;3339:8;3304:29;:44::i;:::-;3178:175;;:::o;434:762:15:-;512:17;944:16;966:19;988:66;966:88;;;;1095:5;1083:18;1071:30;;1160:3;1148:15;;:8;:15;;:42;;;;;1179:11;1167:8;:23;;1148:42;1132:59;;434:762;;;;;:::o;3034:476:12:-;3121:21;3133:8;3121:11;:21::i;:::-;3149:18;3170:9;:19;3180:8;3170:19;;;;;;;;;;;;3149:40;;3195:22;3236:1;3220:6;:13;;;;:17;3195:42;;3243:17;3263:6;3270:14;3263:22;;;;;;;;;;;;;;;;3243:42;;3313:9;3292:6;3299:10;3292:18;;;;;;;;;;;;;;;:30;;;;3329:6;:12;;;;;;;;;;;;;;;;;;;;;;;;3466:10;3443:9;:20;3453:9;3443:20;;;;;;;;;;;:33;;;;3504:1;3482:9;:19;3492:8;3482:19;;;;;;;;;;;:23;;;;3034:476;;;;:::o;5216:165::-;5327:7;5351:10;:18;5362:6;5351:18;;;;;;;;;;;;;;;:25;;;;5344:32;;5216:165;;;:::o;11063:284:14:-;11177:1;11162:17;;:3;:17;;;;11181:12;;;;;;;;;;;;;;;;;11154:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11154:40:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11239:1;11208:33;;:9;:19;11218:8;11208:19;;;;;;;;;;;;;;;;;;;;;:33;;;11243:18;;;;;;;;;;;;;;;;;11200:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11200:62:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11269:26;11281:3;11286:8;11269:11;:26::i;:::-;11333:8;11328:3;11307:35;;11324:1;11307:35;;;;;;;;;;;;11063:284;;:::o;3781:580:12:-;3927:5;3904:28;;:9;:19;3914:8;3904:19;;;;;;;;;;;;;;;;;;;;;:28;;;3934:9;;;;;;;;;;;;;;;;;3896:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3896:48:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3957:9;:19;3967:8;3957:19;;;;;;;;;;;;3950:26;;;;;;;;;;;3983;4012:14;:24;4027:8;4012:24;;;;;;;;;;;;3983:53;;4042:22;4094:1;4067:10;:17;4078:5;4067:17;;;;;;;;;;;;;;;:24;;;;:28;4042:53;;4124:18;4106:14;:36;4102:225;;4156:17;4176:10;:17;4187:5;4176:17;;;;;;;;;;;;;;;4194:14;4176:33;;;;;;;;;;;;;;;;4156:53;;4257:9;4217:10;:17;4228:5;4217:17;;;;;;;;;;;;;;;4235:18;4217:37;;;;;;;;;;;;;;;:49;;;;4302:18;4274:14;:25;4289:9;4274:25;;;;;;;;;;;:46;;;;4102:225;;4333:10;:17;4344:5;4333:17;;;;;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;;;;;;;3781:580;;;;:::o;4625:304::-;4774:1;4743:33;;:9;:19;4753:8;4743:19;;;;;;;;;;;;;;;;;;;;;:33;;;4778:18;;;;;;;;;;;;;;;;;4735:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4735:62:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4825:3;4803:9;:19;4813:8;4803:19;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;4835:10;:15;4846:3;4835:15;;;;;;;;;;;;;;;4856:8;4835:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;4835:30:12;;;;;;;;;;;;;;;;;;;4923:1;4898:10;:15;4909:3;4898:15;;;;;;;;;;;;;;;:22;;;;:26;4871:14;:24;4886:8;4871:24;;;;;;;;;;;:53;;;;4625:304;;:::o;11740:271:14:-;11823:8;4380:1;4349:33;;:9;:19;4359:8;4349:19;;;;;;;;;;;;;;;;;;;;;:33;;;;4384:13;;;;;;;;;;;;;;;;;4341:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4341:57:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11841:18:::1;11862:9;:19;11872:8;11862:19;;;;;;;;;;;;;;;;;;;;;11841:40;;11887:24;11902:8;11887:14;:24::i;:::-;11917:36;11932:10;11944:8;11917:14;:36::i;:::-;11997:8;11993:1;11964:42;;11973:10;11964:42;;;;;;;;;;;;4404:1;11740:271:::0;;:::o;260:3583:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity 0.6.2;\n\nimport \"../tokens/nf-token-metadata.sol\";\nimport \"../tokens/nf-token-enumerable.sol\";\nimport \"../ownership/ownable.sol\";\n\n/**\n * @dev This is an example contract implementation of NFToken with enumerable and metadata\n * extensions.\n */\ncontract NFTokenMetadataEnumerableMock is\n  NFTokenEnumerable,\n  NFTokenMetadata,\n  Ownable\n{\n\n  /**\n   * @dev Contract constructor.\n   * @param _name A descriptive name for a collection of NFTs.\n   * @param _symbol An abbreviated name for NFTokens.\n   */\n  constructor(\n    string memory _name,\n    string memory _symbol\n  )\n    public\n  {\n    nftName = _name;\n    nftSymbol = _symbol;\n  }\n\n  /**\n   * @dev Mints a new NFT.\n   * @param _to The address that will own the minted NFT.\n   * @param _tokenId of the NFT to be minted by the msg.sender.\n   * @param _uri String representing RFC 3986 URI.\n   */\n  function mint(\n    address _to,\n    uint256 _tokenId,\n    string calldata _uri\n  )\n    external\n    onlyOwner\n  {\n    super._mint(_to, _tokenId);\n    super._setTokenUri(_tokenId, _uri);\n  }\n\n  /**\n   * @dev Removes a NFT from owner.\n   * @param _tokenId Which NFT we want to remove.\n   */\n  function burn(\n    uint256 _tokenId\n  )\n    external\n    onlyOwner\n  {\n    super._burn(_tokenId);\n  }\n\n  /**\n   * @dev Mints a new NFT.\n   * @notice This is an internal function which should be called from user-implemented external\n   * mint function. Its purpose is to show and properly initialize data structures when using this\n   * implementation.\n   * @param _to The address that will own the minted NFT.\n   * @param _tokenId of the NFT to be minted by the msg.sender.\n   */\n  function _mint(\n    address _to,\n    uint256 _tokenId\n  )\n    internal\n    override(NFToken, NFTokenEnumerable)\n    virtual\n  {\n    NFTokenEnumerable._mint(_to, _tokenId);\n  }\n\n  /**\n   * @dev Burns a NFT.\n   * @notice This is an internal function which should be called from user-implemented external\n   * burn function. Its purpose is to show and properly initialize data structures when using this\n   * implementation. Also, note that this burn implementation allows the minter to re-mint a burned\n   * NFT.\n   * @param _tokenId ID of the NFT to be burned.\n   */\n  function _burn(\n    uint256 _tokenId\n  )\n    internal\n    override(NFTokenMetadata, NFTokenEnumerable)\n    virtual\n  {\n    NFTokenEnumerable._burn(_tokenId);\n    if (bytes(idToUri[_tokenId]).length != 0)\n    {\n      delete idToUri[_tokenId];\n    }\n  }\n\n  /**\n   * @dev Removes a NFT from an address.\n   * @notice Use and override this function with caution. Wrong usage can have serious consequences.\n   * @param _from Address from wich we want to remove the NFT.\n   * @param _tokenId Which NFT we want to remove.\n   */\n  function _removeNFToken(\n    address _from,\n    uint256 _tokenId\n  )\n    internal\n    override(NFToken, NFTokenEnumerable)\n  {\n    NFTokenEnumerable._removeNFToken(_from, _tokenId);\n  }\n\n  /**\n   * @dev Assignes a new NFT to an address.\n   * @notice Use and override this function with caution. Wrong usage can have serious consequences.\n   * @param _to Address to wich we want to add the NFT.\n   * @param _tokenId Which NFT we want to add.\n   */\n  function _addNFToken(\n    address _to,\n    uint256 _tokenId\n  )\n    internal\n    override(NFToken, NFTokenEnumerable)\n  {\n    NFTokenEnumerable._addNFToken(_to, _tokenId);\n  }\n\n   /**\n   * @dev Helper function that gets NFT count of owner. This is needed for overriding in enumerable\n   * extension to remove double storage(gas optimization) of owner nft count.\n   * @param _owner Address for whom to query the count.\n   * @return Number of _owner NFTs.\n   */\n  function _getOwnerNFTCount(\n    address _owner\n  )\n    internal\n    override(NFToken, NFTokenEnumerable)\n    view\n    returns (uint256)\n  {\n    return NFTokenEnumerable._getOwnerNFTCount(_owner);\n  }\n\n}\n",
  "sourcePath": "/Users/tk/Programming/education/prototypes/DePit/contracts_env/contracts/mocks/nf-token-metadata-enumerable-mock.sol",
  "ast": {
    "absolutePath": "/Users/tk/Programming/education/prototypes/DePit/contracts_env/contracts/mocks/nf-token-metadata-enumerable-mock.sol",
    "exportedSymbols": {
      "NFTokenMetadataEnumerableMock": [
        384
      ]
    },
    "id": 385,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 217,
        "literals": [
          "solidity",
          "0.6",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:4"
      },
      {
        "absolutePath": "/Users/tk/Programming/education/prototypes/DePit/contracts_env/contracts/tokens/nf-token-metadata.sol",
        "file": "../tokens/nf-token-metadata.sol",
        "id": 218,
        "nodeType": "ImportDirective",
        "scope": 385,
        "sourceUnit": 1124,
        "src": "24:41:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/tk/Programming/education/prototypes/DePit/contracts_env/contracts/tokens/nf-token-enumerable.sol",
        "file": "../tokens/nf-token-enumerable.sol",
        "id": 219,
        "nodeType": "ImportDirective",
        "scope": 385,
        "sourceUnit": 1013,
        "src": "66:43:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/tk/Programming/education/prototypes/DePit/contracts_env/contracts/ownership/ownable.sol",
        "file": "../ownership/ownable.sol",
        "id": 220,
        "nodeType": "ImportDirective",
        "scope": 385,
        "sourceUnit": 541,
        "src": "110:34:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 221,
              "name": "NFTokenEnumerable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1012,
              "src": "304:17:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NFTokenEnumerable_$1012",
                "typeString": "contract NFTokenEnumerable"
              }
            },
            "id": 222,
            "nodeType": "InheritanceSpecifier",
            "src": "304:17:4"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 223,
              "name": "NFTokenMetadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1123,
              "src": "325:15:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NFTokenMetadata_$1123",
                "typeString": "contract NFTokenMetadata"
              }
            },
            "id": 224,
            "nodeType": "InheritanceSpecifier",
            "src": "325:15:4"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 225,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 540,
              "src": "344:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$540",
                "typeString": "contract Ownable"
              }
            },
            "id": 226,
            "nodeType": "InheritanceSpecifier",
            "src": "344:7:4"
          }
        ],
        "contractDependencies": [
          540,
          564,
          584,
          700,
          1012,
          1123,
          1812,
          1852,
          1885
        ],
        "contractKind": "contract",
        "documentation": "@dev This is an example contract implementation of NFToken with enumerable and metadata\nextensions.",
        "fullyImplemented": true,
        "id": 384,
        "linearizedBaseContracts": [
          384,
          540,
          1123,
          584,
          1012,
          564,
          1812,
          1885,
          1852,
          700
        ],
        "name": "NFTokenMetadataEnumerableMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 241,
              "nodeType": "Block",
              "src": "599:51:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 233,
                      "name": "nftName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1022,
                      "src": "605:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 234,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 228,
                      "src": "615:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "605:15:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 236,
                  "nodeType": "ExpressionStatement",
                  "src": "605:15:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 237,
                      "name": "nftSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1024,
                      "src": "626:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 238,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 230,
                      "src": "638:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "626:19:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 240,
                  "nodeType": "ExpressionStatement",
                  "src": "626:19:4"
                }
              ]
            },
            "documentation": "@dev Contract constructor.\n@param _name A descriptive name for a collection of NFTs.\n@param _symbol An abbreviated name for NFTokens.",
            "id": 242,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 231,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 228,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 242,
                  "src": "535:19:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 227,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "535:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 230,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 242,
                  "src": "560:21:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 229,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "560:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "529:56:4"
            },
            "returnParameters": {
              "id": 232,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "599:0:4"
            },
            "scope": 384,
            "src": "518:132:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 267,
              "nodeType": "Block",
              "src": "978:77:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 256,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 244,
                        "src": "996:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 257,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 246,
                        "src": "1001:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 253,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "984:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_NFTokenMetadataEnumerableMock_$384",
                          "typeString": "contract super NFTokenMetadataEnumerableMock"
                        }
                      },
                      "id": 255,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 826,
                      "src": "984:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "984:26:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 259,
                  "nodeType": "ExpressionStatement",
                  "src": "984:26:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 263,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 246,
                        "src": "1035:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 264,
                        "name": "_uri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 248,
                        "src": "1045:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 260,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1016:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_NFTokenMetadataEnumerableMock_$384",
                          "typeString": "contract super NFTokenMetadataEnumerableMock"
                        }
                      },
                      "id": 262,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_setTokenUri",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1122,
                      "src": "1016:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1016:34:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 266,
                  "nodeType": "ExpressionStatement",
                  "src": "1016:34:4"
                }
              ]
            },
            "documentation": "@dev Mints a new NFT.\n@param _to The address that will own the minted NFT.\n@param _tokenId of the NFT to be minted by the msg.sender.\n@param _uri String representing RFC 3986 URI.",
            "functionSelector": "d3fc9864",
            "id": 268,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 251,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 250,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 512,
                  "src": "966:9:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "966:9:4"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 249,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 244,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 268,
                  "src": "885:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 243,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "885:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 246,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 268,
                  "src": "902:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 245,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "902:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 248,
                  "name": "_uri",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 268,
                  "src": "924:20:4",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 247,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "924:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "879:69:4"
            },
            "returnParameters": {
              "id": 252,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "978:0:4"
            },
            "scope": 384,
            "src": "866:189:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 281,
              "nodeType": "Block",
              "src": "1226:32:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 278,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 270,
                        "src": "1244:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 275,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1232:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_NFTokenMetadataEnumerableMock_$384",
                          "typeString": "contract super NFTokenMetadataEnumerableMock"
                        }
                      },
                      "id": 277,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1105,
                      "src": "1232:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1232:21:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 280,
                  "nodeType": "ExpressionStatement",
                  "src": "1232:21:4"
                }
              ]
            },
            "documentation": "@dev Removes a NFT from owner.\n@param _tokenId Which NFT we want to remove.",
            "functionSelector": "42966c68",
            "id": 282,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 273,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 272,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 512,
                  "src": "1214:9:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1214:9:4"
              }
            ],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 271,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 270,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 282,
                  "src": "1176:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 269,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1176:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1170:26:4"
            },
            "returnParameters": {
              "id": 274,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1226:0:4"
            },
            "scope": 384,
            "src": "1157:101:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              826,
              1605
            ],
            "body": {
              "id": 299,
              "nodeType": "Block",
              "src": "1765:49:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 295,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 284,
                        "src": "1795:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 296,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 286,
                        "src": "1800:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 292,
                        "name": "NFTokenEnumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1012,
                        "src": "1771:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NFTokenEnumerable_$1012_$",
                          "typeString": "type(contract NFTokenEnumerable)"
                        }
                      },
                      "id": 294,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 826,
                      "src": "1771:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1771:38:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 298,
                  "nodeType": "ExpressionStatement",
                  "src": "1771:38:4"
                }
              ]
            },
            "documentation": "@dev Mints a new NFT.\n@notice This is an internal function which should be called from user-implemented external\nmint function. Its purpose is to show and properly initialize data structures when using this\nimplementation.\n@param _to The address that will own the minted NFT.\n@param _tokenId of the NFT to be minted by the msg.sender.",
            "id": 300,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 290,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "contractScope": null,
                  "id": 288,
                  "name": "NFToken",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1812,
                  "src": "1723:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_NFToken_$1812",
                    "typeString": "contract NFToken"
                  }
                },
                {
                  "contractScope": null,
                  "id": 289,
                  "name": "NFTokenEnumerable",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1012,
                  "src": "1732:17:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_NFTokenEnumerable_$1012",
                    "typeString": "contract NFTokenEnumerable"
                  }
                }
              ],
              "src": "1714:36:4"
            },
            "parameters": {
              "id": 287,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 284,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 300,
                  "src": "1659:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 283,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1659:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 286,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 300,
                  "src": "1676:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 285,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1676:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1653:43:4"
            },
            "returnParameters": {
              "id": 291,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1765:0:4"
            },
            "scope": 384,
            "src": "1639:175:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              881,
              1105
            ],
            "body": {
              "id": 330,
              "nodeType": "Block",
              "src": "2324:134:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 311,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 302,
                        "src": "2354:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 308,
                        "name": "NFTokenEnumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1012,
                        "src": "2330:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NFTokenEnumerable_$1012_$",
                          "typeString": "type(contract NFTokenEnumerable)"
                        }
                      },
                      "id": 310,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 881,
                      "src": "2330:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2330:33:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 313,
                  "nodeType": "ExpressionStatement",
                  "src": "2330:33:4"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 316,
                              "name": "idToUri",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1028,
                              "src": "2379:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                                "typeString": "mapping(uint256 => string storage ref)"
                              }
                            },
                            "id": 318,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 317,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 302,
                              "src": "2387:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2379:17:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          ],
                          "id": 315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2373:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 314,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "2373:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2373:24:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes storage pointer"
                        }
                      },
                      "id": 320,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2373:31:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 321,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2408:1:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2373:36:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 329,
                  "nodeType": "IfStatement",
                  "src": "2369:85:4",
                  "trueBody": {
                    "id": 328,
                    "nodeType": "Block",
                    "src": "2415:39:4",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "2423:24:4",
                          "subExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 323,
                              "name": "idToUri",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1028,
                              "src": "2430:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                                "typeString": "mapping(uint256 => string storage ref)"
                              }
                            },
                            "id": 325,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 324,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 302,
                              "src": "2438:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2430:17:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 327,
                        "nodeType": "ExpressionStatement",
                        "src": "2423:24:4"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev Burns a NFT.\n@notice This is an internal function which should be called from user-implemented external\nburn function. Its purpose is to show and properly initialize data structures when using this\nimplementation. Also, note that this burn implementation allows the minter to re-mint a burned\nNFT.\n@param _tokenId ID of the NFT to be burned.",
            "id": 331,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 306,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "contractScope": null,
                  "id": 304,
                  "name": "NFTokenMetadata",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1123,
                  "src": "2274:15:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_NFTokenMetadata_$1123",
                    "typeString": "contract NFTokenMetadata"
                  }
                },
                {
                  "contractScope": null,
                  "id": 305,
                  "name": "NFTokenEnumerable",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1012,
                  "src": "2291:17:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_NFTokenEnumerable_$1012",
                    "typeString": "contract NFTokenEnumerable"
                  }
                }
              ],
              "src": "2265:44:4"
            },
            "parameters": {
              "id": 303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 302,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 331,
                  "src": "2227:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 301,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2227:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2221:26:4"
            },
            "returnParameters": {
              "id": 307,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2324:0:4"
            },
            "scope": 384,
            "src": "2207:251:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              952,
              1670
            ],
            "body": {
              "id": 348,
              "nodeType": "Block",
              "src": "2854:60:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 344,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 333,
                        "src": "2893:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 345,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 335,
                        "src": "2900:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 341,
                        "name": "NFTokenEnumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1012,
                        "src": "2860:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NFTokenEnumerable_$1012_$",
                          "typeString": "type(contract NFTokenEnumerable)"
                        }
                      },
                      "id": 343,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_removeNFToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 952,
                      "src": "2860:32:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2860:49:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 347,
                  "nodeType": "ExpressionStatement",
                  "src": "2860:49:4"
                }
              ]
            },
            "documentation": "@dev Removes a NFT from an address.\n@notice Use and override this function with caution. Wrong usage can have serious consequences.\n@param _from Address from wich we want to remove the NFT.\n@param _tokenId Which NFT we want to remove.",
            "id": 349,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_removeNFToken",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 339,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "contractScope": null,
                  "id": 337,
                  "name": "NFToken",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1812,
                  "src": "2824:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_NFToken_$1812",
                    "typeString": "contract NFToken"
                  }
                },
                {
                  "contractScope": null,
                  "id": 338,
                  "name": "NFTokenEnumerable",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1012,
                  "src": "2833:17:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_NFTokenEnumerable_$1012",
                    "typeString": "contract NFTokenEnumerable"
                  }
                }
              ],
              "src": "2815:36:4"
            },
            "parameters": {
              "id": 336,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 333,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 349,
                  "src": "2758:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 332,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2758:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 335,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 349,
                  "src": "2777:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 334,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2777:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2752:45:4"
            },
            "returnParameters": {
              "id": 340,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2854:0:4"
            },
            "scope": 384,
            "src": "2729:185:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              997,
              1707
            ],
            "body": {
              "id": 366,
              "nodeType": "Block",
              "src": "3298:55:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 362,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 351,
                        "src": "3334:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 363,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 353,
                        "src": "3339:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 359,
                        "name": "NFTokenEnumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1012,
                        "src": "3304:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NFTokenEnumerable_$1012_$",
                          "typeString": "type(contract NFTokenEnumerable)"
                        }
                      },
                      "id": 361,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_addNFToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 997,
                      "src": "3304:29:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3304:44:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 365,
                  "nodeType": "ExpressionStatement",
                  "src": "3304:44:4"
                }
              ]
            },
            "documentation": "@dev Assignes a new NFT to an address.\n@notice Use and override this function with caution. Wrong usage can have serious consequences.\n@param _to Address to wich we want to add the NFT.\n@param _tokenId Which NFT we want to add.",
            "id": 367,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_addNFToken",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 357,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "contractScope": null,
                  "id": 355,
                  "name": "NFToken",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1812,
                  "src": "3268:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_NFToken_$1812",
                    "typeString": "contract NFToken"
                  }
                },
                {
                  "contractScope": null,
                  "id": 356,
                  "name": "NFTokenEnumerable",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1012,
                  "src": "3277:17:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_NFTokenEnumerable_$1012",
                    "typeString": "contract NFTokenEnumerable"
                  }
                }
              ],
              "src": "3259:36:4"
            },
            "parameters": {
              "id": 354,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 351,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 367,
                  "src": "3204:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 350,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3204:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 353,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 367,
                  "src": "3221:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 352,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3221:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3198:43:4"
            },
            "returnParameters": {
              "id": 358,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3298:0:4"
            },
            "scope": 384,
            "src": "3178:175:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              1011,
              1719
            ],
            "body": {
              "id": 382,
              "nodeType": "Block",
              "src": "3779:61:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 379,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 369,
                        "src": "3828:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 377,
                        "name": "NFTokenEnumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1012,
                        "src": "3792:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NFTokenEnumerable_$1012_$",
                          "typeString": "type(contract NFTokenEnumerable)"
                        }
                      },
                      "id": 378,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_getOwnerNFTCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1011,
                      "src": "3792:35:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3792:43:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 376,
                  "id": 381,
                  "nodeType": "Return",
                  "src": "3785:50:4"
                }
              ]
            },
            "documentation": "�dev Helper function that gets NFT count of owner. This is needed for overriding in enumerable\nextension to remove double storage(gas optimization) of owner nft count.\n@param _owner Address for whom to query the count.\n@return Number of _owner NFTs.",
            "id": 383,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getOwnerNFTCount",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 373,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "contractScope": null,
                  "id": 371,
                  "name": "NFToken",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1812,
                  "src": "3718:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_NFToken_$1812",
                    "typeString": "contract NFToken"
                  }
                },
                {
                  "contractScope": null,
                  "id": 372,
                  "name": "NFTokenEnumerable",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1012,
                  "src": "3727:17:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_NFTokenEnumerable_$1012",
                    "typeString": "contract NFTokenEnumerable"
                  }
                }
              ],
              "src": "3709:36:4"
            },
            "parameters": {
              "id": 370,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 369,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 383,
                  "src": "3673:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 368,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3673:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3667:24:4"
            },
            "returnParameters": {
              "id": 376,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 375,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 383,
                  "src": "3768:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 374,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3768:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3767:9:4"
            },
            "scope": 384,
            "src": "3641:199:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 385,
        "src": "260:3583:4"
      }
    ],
    "src": "0:3844:4"
  },
  "legacyAST": {
    "absolutePath": "/Users/tk/Programming/education/prototypes/DePit/contracts_env/contracts/mocks/nf-token-metadata-enumerable-mock.sol",
    "exportedSymbols": {
      "NFTokenMetadataEnumerableMock": [
        384
      ]
    },
    "id": 385,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 217,
        "literals": [
          "solidity",
          "0.6",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:4"
      },
      {
        "absolutePath": "/Users/tk/Programming/education/prototypes/DePit/contracts_env/contracts/tokens/nf-token-metadata.sol",
        "file": "../tokens/nf-token-metadata.sol",
        "id": 218,
        "nodeType": "ImportDirective",
        "scope": 385,
        "sourceUnit": 1124,
        "src": "24:41:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/tk/Programming/education/prototypes/DePit/contracts_env/contracts/tokens/nf-token-enumerable.sol",
        "file": "../tokens/nf-token-enumerable.sol",
        "id": 219,
        "nodeType": "ImportDirective",
        "scope": 385,
        "sourceUnit": 1013,
        "src": "66:43:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/tk/Programming/education/prototypes/DePit/contracts_env/contracts/ownership/ownable.sol",
        "file": "../ownership/ownable.sol",
        "id": 220,
        "nodeType": "ImportDirective",
        "scope": 385,
        "sourceUnit": 541,
        "src": "110:34:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 221,
              "name": "NFTokenEnumerable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1012,
              "src": "304:17:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NFTokenEnumerable_$1012",
                "typeString": "contract NFTokenEnumerable"
              }
            },
            "id": 222,
            "nodeType": "InheritanceSpecifier",
            "src": "304:17:4"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 223,
              "name": "NFTokenMetadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1123,
              "src": "325:15:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NFTokenMetadata_$1123",
                "typeString": "contract NFTokenMetadata"
              }
            },
            "id": 224,
            "nodeType": "InheritanceSpecifier",
            "src": "325:15:4"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 225,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 540,
              "src": "344:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$540",
                "typeString": "contract Ownable"
              }
            },
            "id": 226,
            "nodeType": "InheritanceSpecifier",
            "src": "344:7:4"
          }
        ],
        "contractDependencies": [
          540,
          564,
          584,
          700,
          1012,
          1123,
          1812,
          1852,
          1885
        ],
        "contractKind": "contract",
        "documentation": "@dev This is an example contract implementation of NFToken with enumerable and metadata\nextensions.",
        "fullyImplemented": true,
        "id": 384,
        "linearizedBaseContracts": [
          384,
          540,
          1123,
          584,
          1012,
          564,
          1812,
          1885,
          1852,
          700
        ],
        "name": "NFTokenMetadataEnumerableMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 241,
              "nodeType": "Block",
              "src": "599:51:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 233,
                      "name": "nftName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1022,
                      "src": "605:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 234,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 228,
                      "src": "615:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "605:15:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 236,
                  "nodeType": "ExpressionStatement",
                  "src": "605:15:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 237,
                      "name": "nftSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1024,
                      "src": "626:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 238,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 230,
                      "src": "638:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "626:19:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 240,
                  "nodeType": "ExpressionStatement",
                  "src": "626:19:4"
                }
              ]
            },
            "documentation": "@dev Contract constructor.\n@param _name A descriptive name for a collection of NFTs.\n@param _symbol An abbreviated name for NFTokens.",
            "id": 242,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 231,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 228,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 242,
                  "src": "535:19:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 227,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "535:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 230,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 242,
                  "src": "560:21:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 229,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "560:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "529:56:4"
            },
            "returnParameters": {
              "id": 232,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "599:0:4"
            },
            "scope": 384,
            "src": "518:132:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 267,
              "nodeType": "Block",
              "src": "978:77:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 256,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 244,
                        "src": "996:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 257,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 246,
                        "src": "1001:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 253,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "984:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_NFTokenMetadataEnumerableMock_$384",
                          "typeString": "contract super NFTokenMetadataEnumerableMock"
                        }
                      },
                      "id": 255,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 826,
                      "src": "984:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "984:26:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 259,
                  "nodeType": "ExpressionStatement",
                  "src": "984:26:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 263,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 246,
                        "src": "1035:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 264,
                        "name": "_uri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 248,
                        "src": "1045:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 260,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1016:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_NFTokenMetadataEnumerableMock_$384",
                          "typeString": "contract super NFTokenMetadataEnumerableMock"
                        }
                      },
                      "id": 262,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_setTokenUri",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1122,
                      "src": "1016:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1016:34:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 266,
                  "nodeType": "ExpressionStatement",
                  "src": "1016:34:4"
                }
              ]
            },
            "documentation": "@dev Mints a new NFT.\n@param _to The address that will own the minted NFT.\n@param _tokenId of the NFT to be minted by the msg.sender.\n@param _uri String representing RFC 3986 URI.",
            "functionSelector": "d3fc9864",
            "id": 268,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 251,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 250,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 512,
                  "src": "966:9:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "966:9:4"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 249,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 244,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 268,
                  "src": "885:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 243,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "885:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 246,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 268,
                  "src": "902:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 245,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "902:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 248,
                  "name": "_uri",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 268,
                  "src": "924:20:4",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 247,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "924:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "879:69:4"
            },
            "returnParameters": {
              "id": 252,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "978:0:4"
            },
            "scope": 384,
            "src": "866:189:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 281,
              "nodeType": "Block",
              "src": "1226:32:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 278,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 270,
                        "src": "1244:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 275,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1232:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_NFTokenMetadataEnumerableMock_$384",
                          "typeString": "contract super NFTokenMetadataEnumerableMock"
                        }
                      },
                      "id": 277,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1105,
                      "src": "1232:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1232:21:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 280,
                  "nodeType": "ExpressionStatement",
                  "src": "1232:21:4"
                }
              ]
            },
            "documentation": "@dev Removes a NFT from owner.\n@param _tokenId Which NFT we want to remove.",
            "functionSelector": "42966c68",
            "id": 282,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 273,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 272,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 512,
                  "src": "1214:9:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1214:9:4"
              }
            ],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 271,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 270,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 282,
                  "src": "1176:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 269,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1176:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1170:26:4"
            },
            "returnParameters": {
              "id": 274,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1226:0:4"
            },
            "scope": 384,
            "src": "1157:101:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              826,
              1605
            ],
            "body": {
              "id": 299,
              "nodeType": "Block",
              "src": "1765:49:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 295,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 284,
                        "src": "1795:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 296,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 286,
                        "src": "1800:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 292,
                        "name": "NFTokenEnumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1012,
                        "src": "1771:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NFTokenEnumerable_$1012_$",
                          "typeString": "type(contract NFTokenEnumerable)"
                        }
                      },
                      "id": 294,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 826,
                      "src": "1771:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1771:38:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 298,
                  "nodeType": "ExpressionStatement",
                  "src": "1771:38:4"
                }
              ]
            },
            "documentation": "@dev Mints a new NFT.\n@notice This is an internal function which should be called from user-implemented external\nmint function. Its purpose is to show and properly initialize data structures when using this\nimplementation.\n@param _to The address that will own the minted NFT.\n@param _tokenId of the NFT to be minted by the msg.sender.",
            "id": 300,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 290,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "contractScope": null,
                  "id": 288,
                  "name": "NFToken",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1812,
                  "src": "1723:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_NFToken_$1812",
                    "typeString": "contract NFToken"
                  }
                },
                {
                  "contractScope": null,
                  "id": 289,
                  "name": "NFTokenEnumerable",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1012,
                  "src": "1732:17:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_NFTokenEnumerable_$1012",
                    "typeString": "contract NFTokenEnumerable"
                  }
                }
              ],
              "src": "1714:36:4"
            },
            "parameters": {
              "id": 287,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 284,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 300,
                  "src": "1659:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 283,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1659:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 286,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 300,
                  "src": "1676:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 285,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1676:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1653:43:4"
            },
            "returnParameters": {
              "id": 291,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1765:0:4"
            },
            "scope": 384,
            "src": "1639:175:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              881,
              1105
            ],
            "body": {
              "id": 330,
              "nodeType": "Block",
              "src": "2324:134:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 311,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 302,
                        "src": "2354:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 308,
                        "name": "NFTokenEnumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1012,
                        "src": "2330:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NFTokenEnumerable_$1012_$",
                          "typeString": "type(contract NFTokenEnumerable)"
                        }
                      },
                      "id": 310,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 881,
                      "src": "2330:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2330:33:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 313,
                  "nodeType": "ExpressionStatement",
                  "src": "2330:33:4"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 316,
                              "name": "idToUri",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1028,
                              "src": "2379:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                                "typeString": "mapping(uint256 => string storage ref)"
                              }
                            },
                            "id": 318,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 317,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 302,
                              "src": "2387:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2379:17:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          ],
                          "id": 315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2373:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 314,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "2373:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2373:24:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes storage pointer"
                        }
                      },
                      "id": 320,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2373:31:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 321,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2408:1:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2373:36:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 329,
                  "nodeType": "IfStatement",
                  "src": "2369:85:4",
                  "trueBody": {
                    "id": 328,
                    "nodeType": "Block",
                    "src": "2415:39:4",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "2423:24:4",
                          "subExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 323,
                              "name": "idToUri",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1028,
                              "src": "2430:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                                "typeString": "mapping(uint256 => string storage ref)"
                              }
                            },
                            "id": 325,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 324,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 302,
                              "src": "2438:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2430:17:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 327,
                        "nodeType": "ExpressionStatement",
                        "src": "2423:24:4"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev Burns a NFT.\n@notice This is an internal function which should be called from user-implemented external\nburn function. Its purpose is to show and properly initialize data structures when using this\nimplementation. Also, note that this burn implementation allows the minter to re-mint a burned\nNFT.\n@param _tokenId ID of the NFT to be burned.",
            "id": 331,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 306,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "contractScope": null,
                  "id": 304,
                  "name": "NFTokenMetadata",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1123,
                  "src": "2274:15:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_NFTokenMetadata_$1123",
                    "typeString": "contract NFTokenMetadata"
                  }
                },
                {
                  "contractScope": null,
                  "id": 305,
                  "name": "NFTokenEnumerable",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1012,
                  "src": "2291:17:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_NFTokenEnumerable_$1012",
                    "typeString": "contract NFTokenEnumerable"
                  }
                }
              ],
              "src": "2265:44:4"
            },
            "parameters": {
              "id": 303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 302,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 331,
                  "src": "2227:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 301,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2227:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2221:26:4"
            },
            "returnParameters": {
              "id": 307,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2324:0:4"
            },
            "scope": 384,
            "src": "2207:251:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              952,
              1670
            ],
            "body": {
              "id": 348,
              "nodeType": "Block",
              "src": "2854:60:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 344,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 333,
                        "src": "2893:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 345,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 335,
                        "src": "2900:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 341,
                        "name": "NFTokenEnumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1012,
                        "src": "2860:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NFTokenEnumerable_$1012_$",
                          "typeString": "type(contract NFTokenEnumerable)"
                        }
                      },
                      "id": 343,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_removeNFToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 952,
                      "src": "2860:32:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2860:49:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 347,
                  "nodeType": "ExpressionStatement",
                  "src": "2860:49:4"
                }
              ]
            },
            "documentation": "@dev Removes a NFT from an address.\n@notice Use and override this function with caution. Wrong usage can have serious consequences.\n@param _from Address from wich we want to remove the NFT.\n@param _tokenId Which NFT we want to remove.",
            "id": 349,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_removeNFToken",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 339,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "contractScope": null,
                  "id": 337,
                  "name": "NFToken",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1812,
                  "src": "2824:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_NFToken_$1812",
                    "typeString": "contract NFToken"
                  }
                },
                {
                  "contractScope": null,
                  "id": 338,
                  "name": "NFTokenEnumerable",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1012,
                  "src": "2833:17:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_NFTokenEnumerable_$1012",
                    "typeString": "contract NFTokenEnumerable"
                  }
                }
              ],
              "src": "2815:36:4"
            },
            "parameters": {
              "id": 336,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 333,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 349,
                  "src": "2758:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 332,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2758:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 335,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 349,
                  "src": "2777:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 334,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2777:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2752:45:4"
            },
            "returnParameters": {
              "id": 340,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2854:0:4"
            },
            "scope": 384,
            "src": "2729:185:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              997,
              1707
            ],
            "body": {
              "id": 366,
              "nodeType": "Block",
              "src": "3298:55:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 362,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 351,
                        "src": "3334:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 363,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 353,
                        "src": "3339:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 359,
                        "name": "NFTokenEnumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1012,
                        "src": "3304:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NFTokenEnumerable_$1012_$",
                          "typeString": "type(contract NFTokenEnumerable)"
                        }
                      },
                      "id": 361,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_addNFToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 997,
                      "src": "3304:29:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3304:44:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 365,
                  "nodeType": "ExpressionStatement",
                  "src": "3304:44:4"
                }
              ]
            },
            "documentation": "@dev Assignes a new NFT to an address.\n@notice Use and override this function with caution. Wrong usage can have serious consequences.\n@param _to Address to wich we want to add the NFT.\n@param _tokenId Which NFT we want to add.",
            "id": 367,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_addNFToken",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 357,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "contractScope": null,
                  "id": 355,
                  "name": "NFToken",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1812,
                  "src": "3268:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_NFToken_$1812",
                    "typeString": "contract NFToken"
                  }
                },
                {
                  "contractScope": null,
                  "id": 356,
                  "name": "NFTokenEnumerable",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1012,
                  "src": "3277:17:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_NFTokenEnumerable_$1012",
                    "typeString": "contract NFTokenEnumerable"
                  }
                }
              ],
              "src": "3259:36:4"
            },
            "parameters": {
              "id": 354,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 351,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 367,
                  "src": "3204:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 350,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3204:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 353,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 367,
                  "src": "3221:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 352,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3221:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3198:43:4"
            },
            "returnParameters": {
              "id": 358,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3298:0:4"
            },
            "scope": 384,
            "src": "3178:175:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              1011,
              1719
            ],
            "body": {
              "id": 382,
              "nodeType": "Block",
              "src": "3779:61:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 379,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 369,
                        "src": "3828:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 377,
                        "name": "NFTokenEnumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1012,
                        "src": "3792:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NFTokenEnumerable_$1012_$",
                          "typeString": "type(contract NFTokenEnumerable)"
                        }
                      },
                      "id": 378,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_getOwnerNFTCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1011,
                      "src": "3792:35:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3792:43:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 376,
                  "id": 381,
                  "nodeType": "Return",
                  "src": "3785:50:4"
                }
              ]
            },
            "documentation": "�dev Helper function that gets NFT count of owner. This is needed for overriding in enumerable\nextension to remove double storage(gas optimization) of owner nft count.\n@param _owner Address for whom to query the count.\n@return Number of _owner NFTs.",
            "id": 383,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getOwnerNFTCount",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 373,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "contractScope": null,
                  "id": 371,
                  "name": "NFToken",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1812,
                  "src": "3718:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_NFToken_$1812",
                    "typeString": "contract NFToken"
                  }
                },
                {
                  "contractScope": null,
                  "id": 372,
                  "name": "NFTokenEnumerable",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1012,
                  "src": "3727:17:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_NFTokenEnumerable_$1012",
                    "typeString": "contract NFTokenEnumerable"
                  }
                }
              ],
              "src": "3709:36:4"
            },
            "parameters": {
              "id": 370,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 369,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 383,
                  "src": "3673:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 368,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3673:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3667:24:4"
            },
            "returnParameters": {
              "id": 376,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 375,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 383,
                  "src": "3768:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 374,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3768:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3767:9:4"
            },
            "scope": 384,
            "src": "3641:199:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 385,
        "src": "260:3583:4"
      }
    ],
    "src": "0:3844:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.2+commit.bacdbe57.Linux.g++"
  },
  "networks": {},
  "schemaVersion": "3.0.20",
  "updatedAt": "2020-02-16T13:12:06.457Z",
  "devdoc": {
    "details": "This is an example contract implementation of NFToken with enumerable and metadata extensions.",
    "methods": {
      "approve(address,uint256)": {
        "details": "Set or reaffirm the approved address for an NFT. This function can be changed to payable.",
        "params": {
          "_approved": "Address to be approved for the given NFT ID.",
          "_tokenId": "ID of the token to be approved."
        }
      },
      "balanceOf(address)": {
        "details": "Returns the number of NFTs owned by `_owner`. NFTs assigned to the zero address are considered invalid, and this function throws for queries about the zero address.",
        "params": {
          "_owner": "Address for whom to query the balance."
        },
        "returns": {
          "_0": "Balance of _owner."
        }
      },
      "burn(uint256)": {
        "details": "Removes a NFT from owner.",
        "params": {
          "_tokenId": "Which NFT we want to remove."
        }
      },
      "constructor": {
        "details": "Contract constructor.",
        "params": {
          "_name": "A descriptive name for a collection of NFTs.",
          "_symbol": "An abbreviated name for NFTokens."
        }
      },
      "getApproved(uint256)": {
        "details": "Get the approved address for a single NFT.",
        "params": {
          "_tokenId": "ID of the NFT to query the approval of."
        },
        "returns": {
          "_0": "Address that _tokenId is approved for."
        }
      },
      "isApprovedForAll(address,address)": {
        "details": "Checks if `_operator` is an approved operator for `_owner`.",
        "params": {
          "_operator": "The address that acts on behalf of the owner.",
          "_owner": "The address that owns the NFTs."
        },
        "returns": {
          "_0": "True if approved for all, false otherwise."
        }
      },
      "mint(address,uint256,string)": {
        "details": "Mints a new NFT.",
        "params": {
          "_to": "The address that will own the minted NFT.",
          "_tokenId": "of the NFT to be minted by the msg.sender.",
          "_uri": "String representing RFC 3986 URI."
        }
      },
      "name()": {
        "details": "Returns a descriptive name for a collection of NFTokens.",
        "returns": {
          "_name": "Representing name."
        }
      },
      "ownerOf(uint256)": {
        "details": "Returns the address of the owner of the NFT. NFTs assigned to zero address are considered invalid, and queries about them do throw.",
        "params": {
          "_tokenId": "The identifier for an NFT."
        },
        "returns": {
          "_owner": "Address of _tokenId owner."
        }
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of an NFT from one address to another address. This function can be changed to payable.",
        "params": {
          "_from": "The current owner of the NFT.",
          "_to": "The new owner.",
          "_tokenId": "The NFT to transfer."
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Transfers the ownership of an NFT from one address to another address. This function can be changed to payable.",
        "params": {
          "_data": "Additional data with no specified format, sent in call to `_to`.",
          "_from": "The current owner of the NFT.",
          "_to": "The new owner.",
          "_tokenId": "The NFT to transfer."
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Enables or disables approval for a third party (\"operator\") to manage all of `msg.sender`'s assets. It also emits the ApprovalForAll event.",
        "params": {
          "_approved": "True if the operators is approved, false to revoke approval.",
          "_operator": "Address to add to the set of authorized operators."
        }
      },
      "supportsInterface(bytes4)": {
        "details": "Function to check which interfaces are suported by this contract.",
        "params": {
          "_interfaceID": "Id of the interface."
        },
        "returns": {
          "_0": "True if _interfaceID is supported, false otherwise."
        }
      },
      "symbol()": {
        "details": "Returns an abbreviated name for NFTokens.",
        "returns": {
          "_symbol": "Representing symbol."
        }
      },
      "tokenByIndex(uint256)": {
        "details": "Returns NFT ID by its index.",
        "params": {
          "_index": "A counter less than `totalSupply()`."
        },
        "returns": {
          "_0": "Token id."
        }
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "returns the n-th NFT ID from a list of owner's tokens.",
        "params": {
          "_index": "Index number representing n-th token in owner's list of tokens.",
          "_owner": "Token owner's address."
        },
        "returns": {
          "_0": "Token id."
        }
      },
      "tokenURI(uint256)": {
        "details": "A distinct URI (RFC 3986) for a given NFT.",
        "params": {
          "_tokenId": "Id for which we want uri."
        },
        "returns": {
          "_0": "URI of _tokenId."
        }
      },
      "totalSupply()": {
        "details": "Returns the count of all existing NFTokens.",
        "returns": {
          "_0": "Total supply of NFTs."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. This function can be changed to payable.",
        "params": {
          "_from": "The current owner of the NFT.",
          "_to": "The new owner.",
          "_tokenId": "The NFT to transfer."
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "_newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "approve(address,uint256)": {
        "notice": "The zero address indicates there is no approved address. Throws unless `msg.sender` is the current NFT owner, or an authorized operator of the current owner."
      },
      "getApproved(uint256)": {
        "notice": "Throws if `_tokenId` is not a valid NFT."
      },
      "safeTransferFrom(address,address,uint256)": {
        "notice": "This works identically to the other function with an extra data parameter, except this function just sets data to \"\""
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "notice": "Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. When transfer is complete, this function checks if `_to` is a smart contract (code size > 0). If so, it calls `onERC721Received` on `_to` and throws if the return value is not `bytes4(keccak256(\"onERC721Received(address,uint256,bytes)\"))`."
      },
      "setApprovalForAll(address,bool)": {
        "notice": "This works even if sender doesn't own any tokens at the time."
      },
      "transferFrom(address,address,uint256)": {
        "notice": "The caller is responsible to confirm that `_to` is capable of receiving NFTs or else they maybe be permanently lost."
      }
    }
  }
}